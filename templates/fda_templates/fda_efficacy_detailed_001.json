{
  "id": "fda-efficacy-detailed-001",
  "title": "Table 14.2.1 Primary Efficacy Endpoint Analysis",
  "type": "table",
  "category": "efficacy",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.2",
    "population": "Intent-to-Treat (ITT)",
    "statistical_method": "Mixed model repeated measures",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review"],
    "regulatory_requirements": [
      "ICH E3 Guidelines Section 14.2.1",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "Statistical Analysis Plan Template"
    ]
  },
  "template_structure": {
    "title": "Table 14.2.1 Primary Efficacy Endpoint Analysis",
    "subtitle": "Intent-to-Treat Population",
    "columns": [
      "Parameter",
      "Visit",
      "Placebo\n(N=XXX)\nLS Mean (SE)",
      "Treatment A\n(N=XXX)\nLS Mean (SE)",
      "Treatment B\n(N=XXX)\nLS Mean (SE)",
      "Treatment A vs Placebo\nDifference (95% CI)",
      "Treatment B vs Placebo\nDifference (95% CI)",
      "p-value"
    ],
    "rows": [
      "Primary Endpoint",
      "  Change from Baseline at Week 12",
      "Secondary Endpoints",
      "  Change from Baseline at Week 4",
      "  Change from Baseline at Week 8",
      "  Change from Baseline at Week 16",
      "  Change from Baseline at Week 24",
      "  Response Rate at Week 12",
      "  Response Rate at Week 24",
      "  Remission Rate at Week 12",
      "  Remission Rate at Week 24",
      "Sensitivity Analyses",
      "  Per Protocol Population",
      "  Last Observation Carried Forward",
      "  Multiple Imputation",
      "  Worst Case Scenario",
      "  Best Case Scenario",
      "Subgroup Analyses",
      "  Age <65 vs ≥65",
      "  Male vs Female",
      "  Disease Severity: Mild vs Moderate vs Severe",
      "  Prior Treatment: Yes vs No",
      "  Geographic Region: North America vs Europe vs Asia",
      "  Baseline Score: Low vs Medium vs High"
    ],
    "footnotes": [
      "ITT = Intent-to-Treat population",
      "LS Mean = Least Squares Mean",
      "SE = Standard Error",
      "CI = Confidence Interval",
      "N = Number of subjects in the analysis population",
      "Analysis based on Mixed Model Repeated Measures (MMRM)",
      "Model includes treatment, visit, treatment-by-visit interaction, baseline value, and baseline-by-visit interaction",
      "Response rate defined as ≥50% improvement from baseline",
      "Remission rate defined as score ≤3 at visit",
      "Missing data handled using MMRM approach",
      "p-values are from treatment-by-visit interaction tests",
      "95% confidence intervals are based on t-distribution"
    ],
    "statistical_notes": [
      "Primary analysis uses Mixed Model Repeated Measures (MMRM) approach",
      "Model includes fixed effects for treatment, visit, treatment-by-visit interaction, baseline value, and baseline-by-visit interaction",
      "Random effects include subject-specific intercepts",
      "Covariance structure: unstructured or compound symmetry based on model fit",
      "Missing data handled using likelihood-based methods",
      "Treatment differences and confidence intervals calculated using contrast statements",
      "p-values from F-tests for treatment-by-visit interaction",
      "Response and remission rates analyzed using logistic regression with similar model structure"
    ]
  },
  "r_code": {
    "libraries": [
      "library(dplyr)",
      "library(tidyr)",
      "library(haven)",
      "library(gt)",
      "library(flextable)",
      "library(officer)",
      "library(lme4)",
      "library(emmeans)",
      "library(broom)",
      "library(glmnet)",
      "library(mice)"
    ],
    "data_preparation": [
      "# Load ADSL and ADQS datasets",
      "adsl <- read_sas('data/adam/adsl.sas7bdat')",
      "adqs <- read_sas('data/adam/adqs.sas7bdat')",
      "",
      "# Define treatment groups",
      "adsl$TRT01P <- factor(adsl$TRT01P, levels = c('Placebo', 'Treatment A', 'Treatment B'))",
      "",
      "# Create ITT population",
      "itt_pop <- adsl %>% filter(ITTFL == 'Y')",
      "",
      "# Merge with efficacy data",
      "efficacy_data <- itt_pop %>%",
      "  left_join(adqs, by = 'USUBJID') %>%",
      "  filter(PARAMCD == 'TOTSCORE') %>%  # Primary endpoint",
      "  mutate(",
      "    # Create change from baseline",
      "    CHG = AVAL - BASE,",
      "    # Create percentage change",
      "    PCHG = 100 * CHG / BASE,",
      "    # Ensure visit is factor",
      "    AVISIT = factor(AVISIT, levels = c('Baseline', 'Week 4', 'Week 8', 'Week 12', 'Week 16', 'Week 24')),",
      "    # Create response and remission flags",
      "    RESPONSE = case_when(",
      "      PCHG <= -50 ~ 'Yes',",
      "      !is.na(PCHG) ~ 'No',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    REMISSION = case_when(",
      "      AVAL <= 3 ~ 'Yes',",
      "      !is.na(AVAL) ~ 'No',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    # Create subgroup variables",
      "    AGE_CAT = case_when(",
      "      AGE < 65 ~ '<65',",
      "      AGE >= 65 ~ '≥65',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    SEX_CAT = SEX,",
      "    SEVERITY_CAT = case_when(",
      "      SEV == 1 ~ 'Mild',",
      "      SEV == 2 ~ 'Moderate',",
      "      SEV == 3 ~ 'Severe',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    PRIOR_TX_CAT = case_when(",
      "      PRIORFL == 'Y' ~ 'Yes',",
      "      PRIORFL == 'N' ~ 'No',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    REGION_CAT = case_when(",
      "      COUNTRY %in% c('USA', 'CANADA') ~ 'North America',",
      "      COUNTRY %in% c('GERMANY', 'FRANCE', 'UK', 'ITALY', 'SPAIN') ~ 'Europe',",
      "      COUNTRY %in% c('JAPAN', 'CHINA', 'KOREA') ~ 'Asia',",
      "      TRUE ~ 'Other'",
      "    ),",
      "    BASELINE_CAT = case_when(",
      "      BASE <= quantile(BASE, 0.33, na.rm = TRUE) ~ 'Low',",
      "      BASE <= quantile(BASE, 0.67, na.rm = TRUE) ~ 'Medium',",
      "      BASE > quantile(BASE, 0.67, na.rm = TRUE) ~ 'High',",
      "      TRUE ~ NA_character_",
      "    )",
      "  )"
    ],
    "statistical_analysis": [
      "# Function to fit MMRM model",
      "fit_mmrm <- function(data, endpoint_var, baseline_var = 'BASE') {",
      "  # Create formula for MMRM",
      "  formula_str <- paste(endpoint_var, '~ TRT01P * AVISIT +', baseline_var, '+', baseline_var, ':AVISIT + (1|USUBJID)')",
      "  ",
      "  # Fit mixed model",
      "  model <- lmer(as.formula(formula_str), data = data)",
      "  ",
      "  # Get least squares means",
      "  lsmeans <- emmeans(model, ~ TRT01P | AVISIT)",
      "  ",
      "  # Get treatment differences",
      "  contrasts <- emmeans(model, ~ TRT01P | AVISIT) %>%",
      "    contrast(method = 'pairwise', adjust = 'none') %>%",
      "    as.data.frame() %>%",
      "    filter(contrast %in% c('Treatment A - Placebo', 'Treatment B - Placebo'))",
      "  ",
      "  # Get p-values for treatment-by-visit interaction",
      "  anova_result <- anova(model)",
      "  p_value <- anova_result$`Pr(>F)`[anova_result$term == 'TRT01P:AVISIT']",
      "  ",
      "  return(list(",
      "    model = model,",
      "    lsmeans = lsmeans,",
      "    contrasts = contrasts,",
      "    p_value = p_value",
      "  ))",
      "}",
      "",
      "# Function to analyze response/remission rates",
      "analyze_response_rates <- function(data, response_var, visit_filter) {",
      "  # Filter for specific visit",
      "  visit_data <- data %>% filter(AVISIT == visit_filter)",
      "  ",
      "  # Fit logistic regression",
      "  formula_str <- paste(response_var, '~ TRT01P + BASE')",
      "  model <- glm(as.formula(formula_str), data = visit_data, family = binomial)",
      "  ",
      "  # Get response rates by treatment",
      "  response_rates <- visit_data %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(",
      "      n = n(),",
      "      n_response = sum(!!sym(response_var) == 'Yes', na.rm = TRUE),",
      "      rate = n_response / n,",
      "      .groups = 'drop'",
      "    )",
      "  ",
      "  # Get treatment differences",
      "  contrasts <- emmeans(model, ~ TRT01P) %>%",
      "    contrast(method = 'pairwise', adjust = 'none') %>%",
      "    as.data.frame() %>%",
      "    filter(contrast %in% c('Treatment A - Placebo', 'Treatment B - Placebo'))",
      "  ",
      "  return(list(",
      "    response_rates = response_rates,",
      "    contrasts = contrasts",
      "  ))",
      "}",
      "",
      "# Primary analysis - Change from baseline",
      "primary_model <- fit_mmrm(",
      "  efficacy_data %>% filter(AVISIT %in% c('Baseline', 'Week 12')),",
      "  'CHG'",
      ")",
      "",
      "# Full analysis - All timepoints",
      "full_model <- fit_mmrm(efficacy_data, 'CHG')",
      "",
      "# Response rate analysis",
      "response_week12 <- analyze_response_rates(efficacy_data, 'RESPONSE', 'Week 12')",
      "response_week24 <- analyze_response_rates(efficacy_data, 'RESPONSE', 'Week 24')",
      "",
      "# Remission rate analysis",
      "remission_week12 <- analyze_response_rates(efficacy_data, 'REMISSION', 'Week 12')",
      "remission_week24 <- analyze_response_rates(efficacy_data, 'REMISSION', 'Week 24')",
      "",
      "# Extract results for table",
      "lsmeans_results <- primary_model$lsmeans %>%",
      "  as.data.frame() %>%",
      "  mutate(",
      "    ls_mean_se = sprintf('%.2f (%.3f)', emmean, SE),",
      "    visit_label = case_when(",
      "      AVISIT == 'Week 12' ~ 'Primary Endpoint',",
      "      TRUE ~ paste('Week', gsub('Week ', '', AVISIT))",
      "    )",
      ")",
      "",
      "# Extract treatment differences",
      "contrast_results <- primary_model$contrasts %>%",
      "  mutate(",
      "    difference_ci = sprintf('%.2f (%.2f, %.2f)', estimate, lower.CL, upper.CL),",
      "    p_value = sprintf('%.4f', p.value)",
      "  )"
    ],
    "table_generation": [
      "# Create table data for primary endpoint",
      "table_data <- lsmeans_results %>%",
      "  filter(AVISIT == 'Week 12') %>%",
      "  select(TRT01P, ls_mean_se) %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = ls_mean_se,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Parameter = 'Change from Baseline at Week 12',",
      "    Visit = 'Week 12',",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    `Treatment A vs Placebo` = contrast_results$difference_ci[1],",
      "    `Treatment B vs Placebo` = contrast_results$difference_ci[2],",
      "    `p-value` = contrast_results$p_value[1]",
      "  ) %>%",
      "  select(Parameter, Visit, Placebo, `Treatment A`, `Treatment B`, ",
      "         `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      "",
      "# Add secondary endpoints",
      "secondary_endpoints <- full_model$lsmeans %>%",
      "  as.data.frame() %>%",
      "  filter(AVISIT %in% c('Week 4', 'Week 8', 'Week 16', 'Week 24')) %>%",
      "  mutate(",
      "    ls_mean_se = sprintf('%.2f (%.3f)', emmean, SE),",
      "    Parameter = paste('Change from Baseline at', AVISIT),",
      "    Visit = AVISIT",
      "  ) %>%",
      "  select(TRT01P, ls_mean_se, Parameter, Visit) %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = ls_mean_se,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    `Treatment A vs Placebo` = 'TBD',",
      "    `Treatment B vs Placebo` = 'TBD',",
      "    `p-value` = 'TBD'",
      "  ) %>%",
      "  select(Parameter, Visit, Placebo, `Treatment A`, `Treatment B`, ",
      "         `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      "",
      "# Add response and remission rates",
      "response_rates_data <- bind_rows(",
      "  response_week12$response_rates %>%",
      "    mutate(",
      "      Parameter = 'Response Rate at Week 12',",
      "      Visit = 'Week 12',",
      "      rate_pct = sprintf('%.1f%%', 100 * rate)",
      "    ),",
      "  response_week24$response_rates %>%",
      "    mutate(",
      "      Parameter = 'Response Rate at Week 24',",
      "      Visit = 'Week 24',",
      "      rate_pct = sprintf('%.1f%%', 100 * rate)",
      "    ),",
      "  remission_week12$response_rates %>%",
      "    mutate(",
      "      Parameter = 'Remission Rate at Week 12',",
      "      Visit = 'Week 12',",
      "      rate_pct = sprintf('%.1f%%', 100 * rate)",
      "    ),",
      "  remission_week24$response_rates %>%",
      "    mutate(",
      "      Parameter = 'Remission Rate at Week 24',",
      "      Visit = 'Week 24',",
      "      rate_pct = sprintf('%.1f%%', 100 * rate)",
      "    )",
      ") %>%",
      "  select(TRT01P, rate_pct, Parameter, Visit) %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = rate_pct,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    `Treatment A vs Placebo` = 'TBD',",
      "    `Treatment B vs Placebo` = 'TBD',",
      "    `p-value` = 'TBD'",
      "  ) %>%",
      "  select(Parameter, Visit, Placebo, `Treatment A`, `Treatment B`, ",
      "         `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      "",
      "# Combine all table data",
      "final_table_data <- bind_rows(",
      "  table_data,",
      "  secondary_endpoints,",
      "  response_rates_data",
      ")",
      "",
      "# Create the final table with FDA-compliant formatting",
      "efficacy_table <- gt(final_table_data) %>%",
      "  tab_header(",
      "    title = 'Table 14.2.1 Primary Efficacy Endpoint Analysis',",
      "    subtitle = 'Intent-to-Treat Population'",
      "  ) %>%",
      "  cols_label(",
      "    Parameter = 'Parameter',",
      "    Visit = 'Visit',",
      "    Placebo = 'Placebo\\n(N=XXX)\\nLS Mean (SE)',",
      "    `Treatment A` = 'Treatment A\\n(N=XXX)\\nLS Mean (SE)',",
      "    `Treatment B` = 'Treatment B\\n(N=XXX)\\nLS Mean (SE)',",
      "    `Treatment A vs Placebo` = 'Treatment A vs Placebo\\nDifference (95% CI)',",
      "    `Treatment B vs Placebo` = 'Treatment B vs Placebo\\nDifference (95% CI)',",
      "    `p-value` = 'p-value'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_body(columns = 'Parameter')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(1)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(1, 6, 10, 14, 18)",
      "    )",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'ITT = Intent-to-Treat population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'LS Mean = Least Squares Mean',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'SE = Standard Error',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'CI = Confidence Interval',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'N = Number of subjects in the analysis population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Analysis based on Mixed Model Repeated Measures (MMRM)',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Model includes treatment, visit, treatment-by-visit interaction, baseline value, and baseline-by-visit interaction',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Response rate defined as ≥50% improvement from baseline',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Remission rate defined as score ≤3 at visit',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Missing data handled using MMRM approach',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'p-values are from treatment-by-visit interaction tests',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = '95% confidence intervals are based on t-distribution',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display the table",
      "efficacy_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "validation_checks <- list(",
      "  # Missing data check",
      "  missing_data = efficacy_data %>% summarise(",
      "    missing_baseline = sum(is.na(BASE)),",
      "    missing_post = sum(is.na(AVAL)),",
      "    missing_change = sum(is.na(CHG)),",
      "    missing_visit = sum(is.na(AVISIT))",
      "  ),",
      "  ",
      "  # Sample size by treatment and visit",
      "  sample_sizes = efficacy_data %>%",
      "    group_by(TRT01P, AVISIT) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ),",
      "  ",
      "  # Baseline characteristics",
      "  baseline_stats = efficacy_data %>%",
      "    filter(AVISIT == 'Baseline') %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(",
      "      n = n(),",
      "      mean_baseline = mean(AVAL, na.rm = TRUE),",
      "      sd_baseline = sd(AVAL, na.rm = TRUE),",
      "      .groups = 'drop'",
      "    ),",
      "  ",
      "  # Model diagnostics",
      "  model_diagnostics = list(",
      "    residuals = residuals(primary_model$model),",
      "    fitted_values = fitted(primary_model$model),",
      "    model_summary = summary(primary_model$model),",
      "    anova_table = anova(primary_model$model)",
      "  ),",
      "  ",
      "  # Effect sizes",
      "  effect_sizes = contrast_results %>%",
      "    mutate(",
      "      effect_size = abs(estimate) / SE,",
      "      clinical_significance = case_when(",
      "        abs(estimate) >= 5 ~ 'Clinically Significant',",
      "        abs(estimate) >= 2 ~ 'Moderate',",
      "        TRUE ~ 'Minimal'",
      "      )",
      "    ),",
      "  ",
      "  # Response and remission rates",
      "  response_rates_summary = bind_rows(",
      "    response_week12$response_rates %>% mutate(visit = 'Week 12'),",
      "    response_week24$response_rates %>% mutate(visit = 'Week 24'),",
      "    remission_week12$response_rates %>% mutate(visit = 'Week 12'),",
      "    remission_week24$response_rates %>% mutate(visit = 'Week 24')",
      "  )",
      ")"
    ],
    "export_functions": [
      "# Function to export table to Word document",
      "export_to_word <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Create Word document",
      "  doc <- read_docx() %>%",
      "    body_add_flextable(ft) %>%",
      "    body_add_par('', style = 'Normal') %>%",
      "    body_add_par('Source: Clinical Study Report', style = 'Normal') %>%",
      "    body_add_par(paste('Generated on:', Sys.Date()), style = 'Normal')",
      "  ",
      "  # Save document",
      "  print(doc, target = filename)",
      "}",
      "",
      "# Function to export table to PDF",
      "export_to_pdf <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Save as PDF",
      "  save_as_docx(ft, path = filename)",
      "}",
      "",
      "# Export the efficacy table",
      "export_to_word(efficacy_table, 'output/Table_14_2_1_Efficacy.docx')",
      "export_to_pdf(efficacy_table, 'output/Table_14_2_1_Efficacy.pdf')"
    ]
  },
  "keywords": [
    "efficacy", "endpoints", "primary", "secondary", "fda", "ich", "clinical", 
    "trial", "statistics", "population", "mmrm", "mixed", "model", "response",
    "remission", "baseline", "change", "least", "squares", "treatment"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant primary efficacy endpoint analysis template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.2.1",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "Statistical Analysis Plan Template",
      "Mixed Model Repeated Measures Methodology"
    ],
    "data_requirements": [
      "ADSL dataset with ITTFL flag",
      "ADQS dataset with efficacy variables",
      "Primary endpoint variable: TOTSCORE",
      "Baseline and post-baseline values",
      "Visit information: AVISIT",
      "Treatment assignment: TRT01P",
      "Subgroup variables: AGE, SEX, SEV, PRIORFL, COUNTRY"
    ],
    "statistical_methods": [
      "Mixed Model Repeated Measures (MMRM) for continuous endpoints",
      "Logistic regression for binary endpoints (response/remission rates)",
      "Least squares means and standard errors",
      "Treatment differences with 95% confidence intervals",
      "p-values from F-tests for treatment-by-visit interaction",
      "Missing data handled using likelihood-based methods"
    ]
  }
} 