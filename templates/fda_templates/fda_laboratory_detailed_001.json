{
  "id": "fda-laboratory-detailed-001",
  "title": "Table 14.3.3 Laboratory Evaluations Summary",
  "type": "table",
  "category": "safety",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.3",
    "population": "Safety Population",
    "statistical_method": "Descriptive statistics and shift tables",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review"],
    "regulatory_requirements": [
      "ICH E3 Guidelines Section 14.3.3",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide"
    ]
  },
  "template_structure": {
    "title": "Table 14.3.3 Laboratory Evaluations Summary",
    "subtitle": "Safety Population",
    "columns": [
      "Parameter",
      "Visit",
      "Placebo\n(N=XXX)\nMean ± SD",
      "Treatment A\n(N=XXX)\nMean ± SD",
      "Treatment B\n(N=XXX)\nMean ± SD",
      "Treatment A vs Placebo\nLS Mean Difference\n(95% CI)",
      "Treatment B vs Placebo\nLS Mean Difference\n(95% CI)",
      "p-value"
    ],
    "rows": [
      "Hematology",
      "  Hemoglobin (g/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  White Blood Cell Count (×10³/μL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Platelet Count (×10³/μL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Neutrophil Count (×10³/μL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "Chemistry",
      "  Alanine Aminotransferase (U/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Aspartate Aminotransferase (U/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Alkaline Phosphatase (U/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Total Bilirubin (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Creatinine (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Blood Urea Nitrogen (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Glucose (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Total Cholesterol (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Triglycerides (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Sodium (mEq/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Potassium (mEq/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Chloride (mEq/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Bicarbonate (mEq/L)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Calcium (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Phosphorus (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24",
      "  Magnesium (mg/dL)",
      "    Baseline",
      "    Week 4",
      "    Week 8",
      "    Week 12",
      "    Week 24",
      "    Change from Baseline at Week 12",
      "    Change from Baseline at Week 24"
    ],
    "footnotes": [
      "Safety population = All randomized subjects who received at least one dose of study drug",
      "N = Number of subjects in the analysis population",
      "SD = Standard Deviation",
      "LS Mean = Least Squares Mean",
      "CI = Confidence Interval",
      "U/L = Units per Liter",
      "mg/dL = milligrams per deciliter",
      "mEq/L = milliequivalents per liter",
      "×10³/μL = thousands per microliter",
      "Change from baseline = Post-baseline value - Baseline value",
      "p-values are from treatment-by-visit interaction tests",
      "Missing data handled using last observation carried forward (LOCF)",
      "Clinically significant changes defined based on laboratory reference ranges and clinical judgment"
    ],
    "statistical_notes": [
      "Laboratory values are summarized using descriptive statistics (n, mean, SD)",
      "Change from baseline analyses use Mixed Model Repeated Measures (MMRM)",
      "Model includes fixed effects for treatment, visit, treatment-by-visit interaction, and baseline value",
      "Random effects include subject-specific intercepts",
      "Missing data handled using likelihood-based methods",
      "Treatment differences and confidence intervals calculated using contrast statements",
      "p-values from F-tests for treatment-by-visit interaction",
      "Clinically significant changes are flagged for review"
    ]
  },
  "r_code": {
    "libraries": [
      "library(dplyr)",
      "library(tidyr)",
      "library(haven)",
      "library(gt)",
      "library(flextable)",
      "library(officer)",
      "library(lme4)",
      "library(emmeans)",
      "library(broom)",
      "library(stringr)",
      "library(scales)"
    ],
    "data_preparation": [
      "# Load ADSL and ADLB datasets",
      "adsl <- read_sas('data/adam/adsl.sas7bdat')",
      "adlb <- read_sas('data/adam/adlb.sas7bdat')",
      "",
      "# Define treatment groups",
      "adsl$TRT01P <- factor(adsl$TRT01P, levels = c('Placebo', 'Treatment A', 'Treatment B'))",
      "",
      "# Create safety population",
      "safety_pop <- adsl %>% filter(SAFFL == 'Y')",
      "",
      "# Merge with laboratory data",
      "lab_data <- safety_pop %>%",
      "  left_join(adlb, by = 'USUBJID') %>%",
      "  filter(PARAMCD %in% c(",
      "    # Hematology",
      "    'HGB', 'WBC', 'PLT', 'NEUT',",
      "    # Chemistry",
      "    'ALT', 'AST', 'ALP', 'TBIL', 'CREAT', 'BUN', 'GLUC', 'CHOL', 'TRIG',",
      "    'SODIUM', 'POTASSIUM', 'CHLORIDE', 'BICARB', 'CALCIUM', 'PHOS', 'MAG'",
      "  )) %>%",
      "  mutate(",
      "    # Create parameter labels",
      "    PARAM_LABEL = case_when(",
      "      PARAMCD == 'HGB' ~ 'Hemoglobin (g/dL)',",
      "      PARAMCD == 'WBC' ~ 'White Blood Cell Count (×10³/μL)',",
      "      PARAMCD == 'PLT' ~ 'Platelet Count (×10³/μL)',",
      "      PARAMCD == 'NEUT' ~ 'Neutrophil Count (×10³/μL)',",
      "      PARAMCD == 'ALT' ~ 'Alanine Aminotransferase (U/L)',",
      "      PARAMCD == 'AST' ~ 'Aspartate Aminotransferase (U/L)',",
      "      PARAMCD == 'ALP' ~ 'Alkaline Phosphatase (U/L)',",
      "      PARAMCD == 'TBIL' ~ 'Total Bilirubin (mg/dL)',",
      "      PARAMCD == 'CREAT' ~ 'Creatinine (mg/dL)',",
      "      PARAMCD == 'BUN' ~ 'Blood Urea Nitrogen (mg/dL)',",
      "      PARAMCD == 'GLUC' ~ 'Glucose (mg/dL)',",
      "      PARAMCD == 'CHOL' ~ 'Total Cholesterol (mg/dL)',",
      "      PARAMCD == 'TRIG' ~ 'Triglycerides (mg/dL)',",
      "      PARAMCD == 'SODIUM' ~ 'Sodium (mEq/L)',",
      "      PARAMCD == 'POTASSIUM' ~ 'Potassium (mEq/L)',",
      "      PARAMCD == 'CHLORIDE' ~ 'Chloride (mEq/L)',",
      "      PARAMCD == 'BICARB' ~ 'Bicarbonate (mEq/L)',",
      "      PARAMCD == 'CALCIUM' ~ 'Calcium (mg/dL)',",
      "      PARAMCD == 'PHOS' ~ 'Phosphorus (mg/dL)',",
      "      PARAMCD == 'MAG' ~ 'Magnesium (mg/dL)',",
      "      TRUE ~ PARAM",
      "    ),",
      "    # Create parameter categories",
      "    PARAM_CAT = case_when(",
      "      PARAMCD %in% c('HGB', 'WBC', 'PLT', 'NEUT') ~ 'Hematology',",
      "      PARAMCD %in% c('ALT', 'AST', 'ALP', 'TBIL', 'CREAT', 'BUN', 'GLUC', 'CHOL', 'TRIG',",
      "                      'SODIUM', 'POTASSIUM', 'CHLORIDE', 'BICARB', 'CALCIUM', 'PHOS', 'MAG') ~ 'Chemistry',",
      "      TRUE ~ 'Other'",
      "    ),",
      "    # Ensure visit is factor",
      "    AVISIT = factor(AVISIT, levels = c('Baseline', 'Week 4', 'Week 8', 'Week 12', 'Week 24')),",
      "    # Create change from baseline",
      "    CHG = AVAL - BASE,",
      "    # Ensure numeric values",
      "    AVAL = as.numeric(AVAL),",
      "    BASE = as.numeric(BASE),",
      "    CHG = as.numeric(CHG)",
      "  )"
    ],
    "statistical_analysis": [
      "# Function to create laboratory summary",
      "create_lab_summary <- function(data, param_codes) {",
      "  data %>%",
      "    filter(PARAMCD %in% param_codes) %>%",
      "    group_by(TRT01P, PARAM_LABEL, AVISIT) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      mean_val = mean(AVAL, na.rm = TRUE),",
      "      sd_val = sd(AVAL, na.rm = TRUE),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    mutate(",
      "      mean_sd = sprintf('%.2f ± %.3f', mean_val, sd_val)",
      "    )",
      "}",
      "",
      "# Function to fit MMRM for change from baseline",
      "fit_lab_mmrm <- function(data, param_code) {",
      "  # Filter for specific parameter and post-baseline visits",
      "  param_data <- data %>%",
      "    filter(PARAMCD == param_code, AVISIT != 'Baseline') %>%",
      "    filter(!is.na(CHG))",
      "  ",
      "  # Fit mixed model",
      "  formula_str <- 'CHG ~ TRT01P * AVISIT + BASE'",
      "  model <- lmer(as.formula(formula_str), data = param_data)",
      "  ",
      "  # Get least squares means",
      "  lsmeans <- emmeans(model, ~ TRT01P | AVISIT)",
      "  ",
      "  # Get treatment differences",
      "  contrasts <- emmeans(model, ~ TRT01P | AVISIT) %>%",
      "    contrast(method = 'pairwise', adjust = 'none') %>%",
      "    as.data.frame() %>%",
      "    filter(contrast %in% c('Treatment A - Placebo', 'Treatment B - Placebo'))",
      "  ",
      "  # Get p-values for treatment-by-visit interaction",
      "  anova_result <- anova(model)",
      "  p_value <- anova_result$`Pr(>F)`[anova_result$term == 'TRT01P:AVISIT']",
      "  ",
      "  return(list(",
      "    model = model,",
      "    lsmeans = lsmeans,",
      "    contrasts = contrasts,",
      "    p_value = p_value",
      "  ))",
      "}",
      "",
      "# Function to create shift tables",
      "create_shift_table <- function(data, param_code) {",
      "  # Get baseline and post-baseline data",
      "  shift_data <- data %>%",
      "    filter(PARAMCD == param_code) %>%",
      "    select(USUBJID, TRT01P, AVISIT, ANRIND, BASE_ANRIND) %>%",
      "    filter(AVISIT %in% c('Baseline', 'Week 12', 'Week 24')) %>%",
      "    pivot_wider(",
      "      names_from = AVISIT,",
      "      values_from = ANRIND,",
      "      names_prefix = 'visit_'",
      "    ) %>%",
      "    mutate(",
      "      baseline_status = visit_Baseline,",
      "      week12_status = visit_Week.12,",
      "      week24_status = visit_Week.24",
      "    )",
      "  ",
      "  # Create shift summaries",
      "  shift_summary <- shift_data %>%",
      "    group_by(TRT01P, baseline_status, week12_status) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    )",
      "  ",
      "  return(shift_summary)",
      "}",
      "",
      "# Laboratory parameters",
      "lab_params <- c(",
      "  'HGB', 'WBC', 'PLT', 'NEUT',",
      "  'ALT', 'AST', 'ALP', 'TBIL', 'CREAT', 'BUN', 'GLUC', 'CHOL', 'TRIG',",
      "  'SODIUM', 'POTASSIUM', 'CHLORIDE', 'BICARB', 'CALCIUM', 'PHOS', 'MAG'",
      ")",
      "lab_summary <- create_lab_summary(lab_data, lab_params)",
      "",
      "# Fit MMRM for each parameter",
      "lab_models <- list()",
      "for (param in lab_params) {",
      "  lab_models[[param]] <- fit_lab_mmrm(lab_data, param)",
      "}",
      "",
      "# Create shift tables for key parameters",
      "shift_tables <- list()",
      "for (param in c('ALT', 'AST', 'CREAT', 'HGB', 'WBC', 'PLT')) {",
      "  shift_tables[[param]] <- create_shift_table(lab_data, param)",
      "}"
    ],
    "table_generation": [
      "# Create table data with proper formatting",
      "table_data <- lab_summary %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = mean_sd,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    `Treatment A vs Placebo` = 'TBD',",
      "    `Treatment B vs Placebo` = 'TBD',",
      "    `p-value` = 'TBD'",
      "  ) %>%",
      "  select(PARAM_LABEL, AVISIT, Placebo, `Treatment A`, `Treatment B`, ",
      "         `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      "",
      "# Add change from baseline results",
      "change_results <- list()",
      "for (param in names(lab_models)) {",
      "  param_label <- case_when(",
      "    param == 'HGB' ~ 'Hemoglobin (g/dL)',",
      "    param == 'WBC' ~ 'White Blood Cell Count (×10³/μL)',",
      "    param == 'PLT' ~ 'Platelet Count (×10³/μL)',",
      "    param == 'NEUT' ~ 'Neutrophil Count (×10³/μL)',",
      "    param == 'ALT' ~ 'Alanine Aminotransferase (U/L)',",
      "    param == 'AST' ~ 'Aspartate Aminotransferase (U/L)',",
      "    param == 'ALP' ~ 'Alkaline Phosphatase (U/L)',",
      "    param == 'TBIL' ~ 'Total Bilirubin (mg/dL)',",
      "    param == 'CREAT' ~ 'Creatinine (mg/dL)',",
      "    param == 'BUN' ~ 'Blood Urea Nitrogen (mg/dL)',",
      "    param == 'GLUC' ~ 'Glucose (mg/dL)',",
      "    param == 'CHOL' ~ 'Total Cholesterol (mg/dL)',",
      "    param == 'TRIG' ~ 'Triglycerides (mg/dL)',",
      "    param == 'SODIUM' ~ 'Sodium (mEq/L)',",
      "    param == 'POTASSIUM' ~ 'Potassium (mEq/L)',",
      "    param == 'CHLORIDE' ~ 'Chloride (mEq/L)',",
      "    param == 'BICARB' ~ 'Bicarbonate (mEq/L)',",
      "    param == 'CALCIUM' ~ 'Calcium (mg/dL)',",
      "    param == 'PHOS' ~ 'Phosphorus (mg/dL)',",
      "    param == 'MAG' ~ 'Magnesium (mg/dL)',",
      "    TRUE ~ param",
      "  )",
      "  ",
      "  # Get change from baseline results",
      "  change_data <- lab_models[[param]]$contrasts %>%",
      "    filter(AVISIT %in% c('Week 12', 'Week 24')) %>%",
      "    mutate(",
      "      PARAM_LABEL = param_label,",
      "      difference_ci = sprintf('%.3f (%.3f, %.3f)', estimate, lower.CL, upper.CL),",
      "      p_value = sprintf('%.4f', p.value)",
      "    )",
      "  ",
      "  change_results[[param]] <- change_data",
      "}",
      "",
      "# Combine all data",
      "final_table_data <- bind_rows(",
      "  table_data,",
      "  bind_rows(change_results) %>%",
      "    mutate(",
      "      Placebo = 'Change from Baseline',",
      "      `Treatment A` = 'Change from Baseline',",
      "      `Treatment B` = 'Change from Baseline',",
      "      `Treatment A vs Placebo` = difference_ci,",
      "      `Treatment B vs Placebo` = difference_ci,",
      "      `p-value` = p_value",
      "    ) %>%",
      "    select(PARAM_LABEL, AVISIT, Placebo, `Treatment A`, `Treatment B`, ",
      "           `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      ")",
      "",
      "# Create the final table with FDA-compliant formatting",
      "lab_table <- gt(final_table_data) %>%",
      "  tab_header(",
      "    title = 'Table 14.3.3 Laboratory Evaluations Summary',",
      "    subtitle = 'Safety Population'",
      "  ) %>%",
      "  cols_label(",
      "    PARAM_LABEL = 'Parameter',",
      "    AVISIT = 'Visit',",
      "    Placebo = 'Placebo\\n(N=XXX)\\nMean ± SD',",
      "    `Treatment A` = 'Treatment A\\n(N=XXX)\\nMean ± SD',",
      "    `Treatment B` = 'Treatment B\\n(N=XXX)\\nMean ± SD',",
      "    `Treatment A vs Placebo` = 'Treatment A vs Placebo\\nLS Mean Difference\\n(95% CI)',",
      "    `Treatment B vs Placebo` = 'Treatment B vs Placebo\\nLS Mean Difference\\n(95% CI)',",
      "    `p-value` = 'p-value'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_body(columns = 'PARAM_LABEL')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(1)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(6, 13, 20, 27, 34, 41, 48, 55, 62, 69, 76, 83, 90, 97, 104, 111, 118, 125, 132, 139)",
      "    )",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Safety population = All randomized subjects who received at least one dose of study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'N = Number of subjects in the analysis population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'SD = Standard Deviation',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'LS Mean = Least Squares Mean',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'CI = Confidence Interval',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'U/L = Units per Liter',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'mg/dL = milligrams per deciliter',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'mEq/L = milliequivalents per liter',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = '×10³/μL = thousands per microliter',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Change from baseline = Post-baseline value - Baseline value',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'p-values are from treatment-by-visit interaction tests',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Missing data handled using last observation carried forward (LOCF)',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Clinically significant changes defined based on laboratory reference ranges and clinical judgment',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display the table",
      "lab_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "validation_checks <- list(",
      "  # Missing data check",
      "  missing_data = lab_data %>% summarise(",
      "    missing_hgb = sum(is.na(AVAL) & PARAMCD == 'HGB'),",
      "    missing_wbc = sum(is.na(AVAL) & PARAMCD == 'WBC'),",
      "    missing_alt = sum(is.na(AVAL) & PARAMCD == 'ALT'),",
      "    missing_ast = sum(is.na(AVAL) & PARAMCD == 'AST'),",
      "    missing_creat = sum(is.na(AVAL) & PARAMCD == 'CREAT'),",
      "    missing_gluc = sum(is.na(AVAL) & PARAMCD == 'GLUC')",
      "  ),",
      "  ",
      "  # Sample size validation",
      "  sample_sizes = lab_data %>%",
      "    group_by(TRT01P, PARAMCD, AVISIT) %>%",
      "    summarise(n = n_distinct(USUBJID), .groups = 'drop'),",
      "  ",
      "  # Outlier detection",
      "  outliers = lab_data %>%",
      "    group_by(PARAMCD) %>%",
      "    mutate(",
      "      q1 = quantile(AVAL, 0.25, na.rm = TRUE),",
      "      q3 = quantile(AVAL, 0.75, na.rm = TRUE),",
      "      iqr = q3 - q1,",
      "      outlier = AVAL < (q1 - 1.5 * iqr) | AVAL > (q3 + 1.5 * iqr)",
      "    ) %>%",
      "    filter(outlier)",
      "  ",
      "  # Clinically significant changes",
      "  clinical_significance = lab_data %>%",
      "    filter(!is.na(CHG)) %>%",
      "    mutate(",
      "      clinically_significant = case_when(",
      "        PARAMCD == 'ALT' & abs(CHG) >= 3 * BASE ~ TRUE,",
      "        PARAMCD == 'AST' & abs(CHG) >= 3 * BASE ~ TRUE,",
      "        PARAMCD == 'CREAT' & abs(CHG) >= 0.5 ~ TRUE,",
      "        PARAMCD == 'HGB' & abs(CHG) >= 2 ~ TRUE,",
      "        TRUE ~ FALSE",
      "      )",
      "    ) %>%",
      "    filter(clinically_significant),",
      "  ",
      "  # Model diagnostics",
      "  model_diagnostics = list(",
      "    residuals = lapply(lab_models, function(x) residuals(x$model)),",
      "    fitted_values = lapply(lab_models, function(x) fitted(x$model)),",
      "    model_summaries = lapply(lab_models, function(x) summary(x$model))",
      "  ),",
      "  ",
      "  # Shift table summaries",
      "  shift_summaries = lapply(shift_tables, function(x) {",
      "    x %>% group_by(TRT01P) %>% summarise(",
      "      total_subjects = sum(n_subjects),",
      "      .groups = 'drop'",
      "    )",
      "  })",
      ")"
    ],
    "export_functions": [
      "# Function to export table to Word document",
      "export_to_word <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Create Word document",
      "  doc <- read_docx() %>%",
      "    body_add_flextable(ft) %>%",
      "    body_add_par('', style = 'Normal') %>%",
      "    body_add_par('Source: Clinical Study Report', style = 'Normal') %>%",
      "    body_add_par(paste('Generated on:', Sys.Date()), style = 'Normal')",
      "  ",
      "  # Save document",
      "  print(doc, target = filename)",
      "}",
      "",
      "# Function to export table to PDF",
      "export_to_pdf <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Save as PDF",
      "  save_as_docx(ft, path = filename)",
      "}",
      "",
      "# Export the laboratory table",
      "export_to_word(lab_table, 'output/Table_14_3_3_Laboratory.docx')",
      "export_to_pdf(lab_table, 'output/Table_14_3_3_Laboratory.pdf')"
    ]
  },
  "keywords": [
    "laboratory", "evaluations", "safety", "fda", "ich", "clinical", "trial", 
    "statistics", "population", "hematology", "chemistry", "shift", "tables",
    "mmrm", "change", "baseline", "alt", "ast", "creatinine", "hemoglobin"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant laboratory evaluations summary template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.3.3",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "Statistical Analysis Plan Template"
    ],
    "data_requirements": [
      "ADSL dataset with SAFFL flag",
      "ADLB dataset with laboratory variables",
      "Laboratory variables: HGB, WBC, PLT, NEUT, ALT, AST, ALP, TBIL, CREAT, BUN, GLUC, CHOL, TRIG, SODIUM, POTASSIUM, CHLORIDE, BICARB, CALCIUM, PHOS, MAG",
      "Visit information: AVISIT",
      "Treatment assignment: TRT01P",
      "Baseline and post-baseline values",
      "Reference range information: ANRIND"
    ],
    "statistical_methods": [
      "Descriptive statistics for laboratory values",
      "Mixed Model Repeated Measures (MMRM) for change from baseline",
      "Shift tables for normal to abnormal transitions",
      "Least squares means and standard errors",
      "Treatment differences with 95% confidence intervals",
      "p-values from F-tests for treatment-by-visit interaction",
      "Missing data handled using likelihood-based methods"
    ]
  }
} 