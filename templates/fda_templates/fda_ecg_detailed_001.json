{
  "id": "fda-ecg-detailed-001",
  "title": "Table 14.3.4 ECG Evaluations Summary",
  "type": "table",
  "category": "safety",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.3",
    "population": "Safety Population",
    "statistical_method": "Descriptive statistics and change from baseline",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review"],
    "regulatory_requirements": [
      "ICH E3 Guidelines Section 14.3.4",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "ICH E14 Guidelines for QT/QTc Studies"
    ]
  },
  "template_structure": {
    "title": "Table 14.3.4 ECG Evaluations Summary",
    "subtitle": "Safety Population",
    "columns": [
      "Parameter",
      "Visit",
      "Placebo\n(N=XXX)\nMean ± SD",
      "Treatment A\n(N=XXX)\nMean ± SD",
      "Treatment B\n(N=XXX)\nMean ± SD",
      "Treatment A vs Placebo\nLS Mean Difference\n(95% CI)",
      "Treatment B vs Placebo\nLS Mean Difference\n(95% CI)",
      "p-value"
    ],
    "rows": [
      "QTcF Interval (msec)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24",
      "QTcB Interval (msec)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24",
      "QT Interval (msec)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24",
      "PR Interval (msec)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24",
      "QRS Duration (msec)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24",
      "RR Interval (msec)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24",
      "Heart Rate (bpm)",
      "  Baseline",
      "  Week 4",
      "  Week 8",
      "  Week 12",
      "  Week 24",
      "  Change from Baseline at Week 12",
      "  Change from Baseline at Week 24"
    ],
    "footnotes": [
      "Safety population = All randomized subjects who received at least one dose of study drug",
      "N = Number of subjects in the analysis population",
      "SD = Standard Deviation",
      "LS Mean = Least Squares Mean",
      "CI = Confidence Interval",
      "QTcF = QT interval corrected using Fridericia's formula",
      "QTcB = QT interval corrected using Bazett's formula",
      "msec = milliseconds",
      "bpm = beats per minute",
      "Change from baseline = Post-baseline value - Baseline value",
      "p-values are from treatment-by-visit interaction tests",
      "Missing data handled using last observation carried forward (LOCF)",
      "Clinically significant changes defined as: QTcF ≥30 msec increase from baseline",
      "QTcF ≥450 msec and QTcF ≥480 msec are flagged for review"
    ],
    "statistical_notes": [
      "ECG parameters are summarized using descriptive statistics (n, mean, SD)",
      "Change from baseline analyses use Mixed Model Repeated Measures (MMRM)",
      "Model includes fixed effects for treatment, visit, treatment-by-visit interaction, and baseline value",
      "Random effects include subject-specific intercepts",
      "Missing data handled using likelihood-based methods",
      "Treatment differences and confidence intervals calculated using contrast statements",
      "p-values from F-tests for treatment-by-visit interaction",
      "Clinically significant changes are flagged for review",
      "QTc calculations use Fridericia's formula: QTcF = QT / (RR/1000)^0.33"
    ]
  },
  "r_code": {
    "libraries": [
      "library(dplyr)",
      "library(tidyr)",
      "library(haven)",
      "library(gt)",
      "library(flextable)",
      "library(officer)",
      "library(lme4)",
      "library(emmeans)",
      "library(broom)",
      "library(stringr)",
      "library(scales)"
    ],
    "data_preparation": [
      "# Load ADSL and ADEG datasets",
      "adsl <- read_sas('data/adam/adsl.sas7bdat')",
      "adeg <- read_sas('data/adam/adeg.sas7bdat')",
      "",
      "# Define treatment groups",
      "adsl$TRT01P <- factor(adsl$TRT01P, levels = c('Placebo', 'Treatment A', 'Treatment B'))",
      "",
      "# Create safety population",
      "safety_pop <- adsl %>% filter(SAFFL == 'Y')",
      "",
      "# Merge with ECG data",
      "ecg_data <- safety_pop %>%",
      "  left_join(adeg, by = 'USUBJID') %>%",
      "  filter(PARAMCD %in% c('QTCF', 'QTCB', 'QT', 'PR', 'QRS', 'RR', 'PULSE')) %>%",
      "  mutate(",
      "    # Create parameter labels",
      "    PARAM_LABEL = case_when(",
      "      PARAMCD == 'QTCF' ~ 'QTcF Interval (msec)',",
      "      PARAMCD == 'QTCB' ~ 'QTcB Interval (msec)',",
      "      PARAMCD == 'QT' ~ 'QT Interval (msec)',",
      "      PARAMCD == 'PR' ~ 'PR Interval (msec)',",
      "      PARAMCD == 'QRS' ~ 'QRS Duration (msec)',",
      "      PARAMCD == 'RR' ~ 'RR Interval (msec)',",
      "      PARAMCD == 'PULSE' ~ 'Heart Rate (bpm)',",
      "      TRUE ~ PARAM",
      "    ),",
      "    # Ensure visit is factor",
      "    AVISIT = factor(AVISIT, levels = c('Baseline', 'Week 4', 'Week 8', 'Week 12', 'Week 24')),",
      "    # Create change from baseline",
      "    CHG = AVAL - BASE,",
      "    # Ensure numeric values",
      "    AVAL = as.numeric(AVAL),",
      "    BASE = as.numeric(BASE),",
      "    CHG = as.numeric(CHG),",
      "    # Create clinically significant flags",
      "    QTCF_450 = case_when(",
      "      PARAMCD == 'QTCF' & AVAL >= 450 ~ 'Yes',",
      "      PARAMCD == 'QTCF' & AVAL < 450 ~ 'No',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    QTCF_480 = case_when(",
      "      PARAMCD == 'QTCF' & AVAL >= 480 ~ 'Yes',",
      "      PARAMCD == 'QTCF' & AVAL < 480 ~ 'No',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    QTCF_INC_30 = case_when(",
      "      PARAMCD == 'QTCF' & CHG >= 30 ~ 'Yes',",
      "      PARAMCD == 'QTCF' & CHG < 30 ~ 'No',",
      "      TRUE ~ NA_character_",
      "    )",
      "  )"
    ],
    "statistical_analysis": [
      "# Function to create ECG summary",
      "create_ecg_summary <- function(data, param_codes) {",
      "  data %>%",
      "    filter(PARAMCD %in% param_codes) %>%",
      "    group_by(TRT01P, PARAM_LABEL, AVISIT) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      mean_val = mean(AVAL, na.rm = TRUE),",
      "      sd_val = sd(AVAL, na.rm = TRUE),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    mutate(",
      "      mean_sd = sprintf('%.1f ± %.2f', mean_val, sd_val)",
      "    )",
      "}",
      "",
      "# Function to fit MMRM for change from baseline",
      "fit_ecg_mmrm <- function(data, param_code) {",
      "  # Filter for specific parameter and post-baseline visits",
      "  param_data <- data %>%",
      "    filter(PARAMCD == param_code, AVISIT != 'Baseline') %>%",
      "    filter(!is.na(CHG))",
      "  ",
      "  # Fit mixed model",
      "  formula_str <- 'CHG ~ TRT01P * AVISIT + BASE'",
      "  model <- lmer(as.formula(formula_str), data = param_data)",
      "  ",
      "  # Get least squares means",
      "  lsmeans <- emmeans(model, ~ TRT01P | AVISIT)",
      "  ",
      "  # Get treatment differences",
      "  contrasts <- emmeans(model, ~ TRT01P | AVISIT) %>%",
      "    contrast(method = 'pairwise', adjust = 'none') %>%",
      "    as.data.frame() %>%",
      "    filter(contrast %in% c('Treatment A - Placebo', 'Treatment B - Placebo'))",
      "  ",
      "  # Get p-values for treatment-by-visit interaction",
      "  anova_result <- anova(model)",
      "  p_value <- anova_result$`Pr(>F)`[anova_result$term == 'TRT01P:AVISIT']",
      "  ",
      "  return(list(",
      "    model = model,",
      "    lsmeans = lsmeans,",
      "    contrasts = contrasts,",
      "    p_value = p_value",
      "  ))",
      "}",
      "",
      "# Function to create clinically significant summaries",
      "create_clinical_significance <- function(data) {",
      "  # QTcF ≥450 msec",
      "  qtcf_450_summary <- data %>%",
      "    filter(PARAMCD == 'QTCF', !is.na(QTCF_450)) %>%",
      "    group_by(TRT01P, AVISIT) %>%",
      "    summarise(",
      "      n_total = n_distinct(USUBJID),",
      "      n_450 = sum(QTCF_450 == 'Yes', na.rm = TRUE),",
      "      pct_450 = 100 * n_450 / n_total,",
      "      .groups = 'drop'",
      "    ) %>%",
      "    mutate(",
      "      PARAM_LABEL = 'QTcF ≥450 msec',",
      "      result = sprintf('%.0f (%.1f%%)', n_450, pct_450)",
      "    )",
      "  ",
      "  # QTcF ≥480 msec",
      "  qtcf_480_summary <- data %>%",
      "    filter(PARAMCD == 'QTCF', !is.na(QTCF_480)) %>%",
      "    group_by(TRT01P, AVISIT) %>%",
      "    summarise(",
      "      n_total = n_distinct(USUBJID),",
      "      n_480 = sum(QTCF_480 == 'Yes', na.rm = TRUE),",
      "      pct_480 = 100 * n_480 / n_total,",
      "      .groups = 'drop'",
      "    ) %>%",
      "    mutate(",
      "      PARAM_LABEL = 'QTcF ≥480 msec',",
      "      result = sprintf('%.0f (%.1f%%)', n_480, pct_480)",
      "    )",
      "  ",
      "  # QTcF increase ≥30 msec",
      "  qtcf_inc_30_summary <- data %>%",
      "    filter(PARAMCD == 'QTCF', !is.na(QTCF_INC_30)) %>%",
      "    group_by(TRT01P, AVISIT) %>%",
      "    summarise(",
      "      n_total = n_distinct(USUBJID),",
      "      n_inc_30 = sum(QTCF_INC_30 == 'Yes', na.rm = TRUE),",
      "      pct_inc_30 = 100 * n_inc_30 / n_total,",
      "      .groups = 'drop'",
      "    ) %>%",
      "    mutate(",
      "      PARAM_LABEL = 'QTcF Increase ≥30 msec',",
      "      result = sprintf('%.0f (%.1f%%)', n_inc_30, pct_inc_30)",
      "    )",
      "  ",
      "  return(bind_rows(qtcf_450_summary, qtcf_480_summary, qtcf_inc_30_summary))",
      "}",
      "",
      "# ECG parameters",
      "ecg_params <- c('QTCF', 'QTCB', 'QT', 'PR', 'QRS', 'RR', 'PULSE')",
      "ecg_summary <- create_ecg_summary(ecg_data, ecg_params)",
      "",
      "# Fit MMRM for each parameter",
      "ecg_models <- list()",
      "for (param in ecg_params) {",
      "  ecg_models[[param]] <- fit_ecg_mmrm(ecg_data, param)",
      "}",
      "",
      "# Create clinically significant summaries",
      "clinical_significance_summary <- create_clinical_significance(ecg_data)"
    ],
    "table_generation": [
      "# Create table data with proper formatting",
      "table_data <- ecg_summary %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = mean_sd,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    `Treatment A vs Placebo` = 'TBD',",
      "    `Treatment B vs Placebo` = 'TBD',",
      "    `p-value` = 'TBD'",
      "  ) %>%",
      "  select(PARAM_LABEL, AVISIT, Placebo, `Treatment A`, `Treatment B`, ",
      "         `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      "",
      "# Add change from baseline results",
      "change_results <- list()",
      "for (param in names(ecg_models)) {",
      "  param_label <- case_when(",
      "    param == 'QTCF' ~ 'QTcF Interval (msec)',",
      "    param == 'QTCB' ~ 'QTcB Interval (msec)',",
      "    param == 'QT' ~ 'QT Interval (msec)',",
      "    param == 'PR' ~ 'PR Interval (msec)',",
      "    param == 'QRS' ~ 'QRS Duration (msec)',",
      "    param == 'RR' ~ 'RR Interval (msec)',",
      "    param == 'PULSE' ~ 'Heart Rate (bpm)',",
      "    TRUE ~ param",
      "  )",
      "  ",
      "  # Get change from baseline results",
      "  change_data <- ecg_models[[param]]$contrasts %>%",
      "    filter(AVISIT %in% c('Week 12', 'Week 24')) %>%",
      "    mutate(",
      "      PARAM_LABEL = param_label,",
      "      difference_ci = sprintf('%.2f (%.2f, %.2f)', estimate, lower.CL, upper.CL),",
      "      p_value = sprintf('%.4f', p.value)",
      "    )",
      "  ",
      "  change_results[[param]] <- change_data",
      "}",
      "",
      "# Combine all data",
      "final_table_data <- bind_rows(",
      "  table_data,",
      "  bind_rows(change_results) %>%",
      "    mutate(",
      "      Placebo = 'Change from Baseline',",
      "      `Treatment A` = 'Change from Baseline',",
      "      `Treatment B` = 'Change from Baseline',",
      "      `Treatment A vs Placebo` = difference_ci,",
      "      `Treatment B vs Placebo` = difference_ci,",
      "      `p-value` = p_value",
      "    ) %>%",
      "    select(PARAM_LABEL, AVISIT, Placebo, `Treatment A`, `Treatment B`, ",
      "           `Treatment A vs Placebo`, `Treatment B vs Placebo`, `p-value`)",
      ")",
      "",
      "# Create the final table with FDA-compliant formatting",
      "ecg_table <- gt(final_table_data) %>%",
      "  tab_header(",
      "    title = 'Table 14.3.4 ECG Evaluations Summary',",
      "    subtitle = 'Safety Population'",
      "  ) %>%",
      "  cols_label(",
      "    PARAM_LABEL = 'Parameter',",
      "    AVISIT = 'Visit',",
      "    Placebo = 'Placebo\\n(N=XXX)\\nMean ± SD',",
      "    `Treatment A` = 'Treatment A\\n(N=XXX)\\nMean ± SD',",
      "    `Treatment B` = 'Treatment B\\n(N=XXX)\\nMean ± SD',",
      "    `Treatment A vs Placebo` = 'Treatment A vs Placebo\\nLS Mean Difference\\n(95% CI)',",
      "    `Treatment B vs Placebo` = 'Treatment B vs Placebo\\nLS Mean Difference\\n(95% CI)',",
      "    `p-value` = 'p-value'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_body(columns = 'PARAM_LABEL')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(1)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(6, 13, 20, 27, 34, 41, 48, 55)",
      "    )",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Safety population = All randomized subjects who received at least one dose of study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'N = Number of subjects in the analysis population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'SD = Standard Deviation',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'LS Mean = Least Squares Mean',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'CI = Confidence Interval',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'QTcF = QT interval corrected using Fridericia\\'s formula',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'QTcB = QT interval corrected using Bazett\\'s formula',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'msec = milliseconds',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'bpm = beats per minute',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Change from baseline = Post-baseline value - Baseline value',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'p-values are from treatment-by-visit interaction tests',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Missing data handled using last observation carried forward (LOCF)',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Clinically significant changes defined as: QTcF ≥30 msec increase from baseline',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'QTcF ≥450 msec and QTcF ≥480 msec are flagged for review',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display the table",
      "ecg_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "validation_checks <- list(",
      "  # Missing data check",
      "  missing_data = ecg_data %>% summarise(",
      "    missing_qtcf = sum(is.na(AVAL) & PARAMCD == 'QTCF'),",
      "    missing_qtcb = sum(is.na(AVAL) & PARAMCD == 'QTCB'),",
      "    missing_qt = sum(is.na(AVAL) & PARAMCD == 'QT'),",
      "    missing_pr = sum(is.na(AVAL) & PARAMCD == 'PR'),",
      "    missing_qrs = sum(is.na(AVAL) & PARAMCD == 'QRS'),",
      "    missing_rr = sum(is.na(AVAL) & PARAMCD == 'RR'),",
      "    missing_pulse = sum(is.na(AVAL) & PARAMCD == 'PULSE')",
      "  ),",
      "  ",
      "  # Sample size validation",
      "  sample_sizes = ecg_data %>%",
      "    group_by(TRT01P, PARAMCD, AVISIT) %>%",
      "    summarise(n = n_distinct(USUBJID), .groups = 'drop'),",
      "  ",
      "  # Outlier detection",
      "  outliers = ecg_data %>%",
      "    group_by(PARAMCD) %>%",
      "    mutate(",
      "      q1 = quantile(AVAL, 0.25, na.rm = TRUE),",
      "      q3 = quantile(AVAL, 0.75, na.rm = TRUE),",
      "      iqr = q3 - q1,",
      "      outlier = AVAL < (q1 - 1.5 * iqr) | AVAL > (q3 + 1.5 * iqr)",
      "    ) %>%",
      "    filter(outlier),",
      "  ",
      "  # Clinically significant changes",
      "  clinical_significance = ecg_data %>%",
      "    filter(!is.na(CHG)) %>%",
      "    mutate(",
      "      clinically_significant = case_when(",
      "        PARAMCD == 'QTCF' & abs(CHG) >= 30 ~ TRUE,",
      "        PARAMCD == 'QTCF' & AVAL >= 450 ~ TRUE,",
      "        PARAMCD == 'QTCF' & AVAL >= 480 ~ TRUE,",
      "        TRUE ~ FALSE",
      "      )",
      "    ) %>%",
      "    filter(clinically_significant),",
      "  ",
      "  # Model diagnostics",
      "  model_diagnostics = list(",
      "    residuals = lapply(ecg_models, function(x) residuals(x$model)),",
      "    fitted_values = lapply(ecg_models, function(x) fitted(x$model)),",
      "    model_summaries = lapply(ecg_models, function(x) summary(x$model))",
      "  ),",
      "  ",
      "  # Clinical significance summaries",
      "  clinical_summaries = clinical_significance_summary %>%",
      "    group_by(PARAM_LABEL) %>%",
      "    summarise(",
      "      total_events = sum(n_450 + n_480 + n_inc_30, na.rm = TRUE),",
      "      .groups = 'drop'",
      "    )",
      ")"
    ],
    "export_functions": [
      "# Function to export table to Word document",
      "export_to_word <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Create Word document",
      "  doc <- read_docx() %>%",
      "    body_add_flextable(ft) %>%",
      "    body_add_par('', style = 'Normal') %>%",
      "    body_add_par('Source: Clinical Study Report', style = 'Normal') %>%",
      "    body_add_par(paste('Generated on:', Sys.Date()), style = 'Normal')",
      "  ",
      "  # Save document",
      "  print(doc, target = filename)",
      "}",
      "",
      "# Function to export table to PDF",
      "export_to_pdf <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Save as PDF",
      "  save_as_docx(ft, path = filename)",
      "}",
      "",
      "# Export the ECG table",
      "export_to_word(ecg_table, 'output/Table_14_3_4_ECG.docx')",
      "export_to_pdf(ecg_table, 'output/Table_14_3_4_ECG.pdf')"
    ]
  },
  "keywords": [
    "ecg", "evaluations", "safety", "fda", "ich", "clinical", "trial", 
    "statistics", "population", "qtc", "qt", "pr", "qrs", "rr", "heart",
    "rate", "mmrm", "change", "baseline", "qtcf", "qtcb"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant ECG evaluations summary template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.3.4",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "ICH E14 Guidelines for QT/QTc Studies",
      "Statistical Analysis Plan Template"
    ],
    "data_requirements": [
      "ADSL dataset with SAFFL flag",
      "ADEG dataset with ECG variables",
      "ECG variables: QTCF, QTCB, QT, PR, QRS, RR, PULSE",
      "Visit information: AVISIT",
      "Treatment assignment: TRT01P",
      "Baseline and post-baseline values"
    ],
    "statistical_methods": [
      "Descriptive statistics for ECG parameters",
      "Mixed Model Repeated Measures (MMRM) for change from baseline",
      "QTc calculations using Fridericia's and Bazett's formulas",
      "Least squares means and standard errors",
      "Treatment differences with 95% confidence intervals",
      "p-values from F-tests for treatment-by-visit interaction",
      "Missing data handled using likelihood-based methods",
      "Clinical significance assessment for QTc prolongation"
    ]
  }
} 