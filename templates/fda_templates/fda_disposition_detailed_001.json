{
  "id": "fda-disposition-detailed-001",
  "title": "Table 14.1.2 Subject Disposition",
  "type": "table",
  "category": "demographics",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.1",
    "population": "All Randomized Subjects",
    "statistical_method": "Descriptive statistics",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review"],
    "regulatory_requirements": [
      "ICH E3 Guidelines Section 14.1.2",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide"
    ]
  },
  "template_structure": {
    "title": "Table 14.1.2 Subject Disposition",
    "subtitle": "All Randomized Subjects",
    "columns": [
      "Disposition",
      "Placebo\n(N=XXX)\nn (%)",
      "Treatment A\n(N=XXX)\nn (%)",
      "Treatment B\n(N=XXX)\nn (%)",
      "Total\n(N=XXX)\nn (%)"
    ],
    "rows": [
      "Screened",
      "Randomized",
      "Treated",
      "Completed Study",
      "Discontinued",
      "  Adverse Event",
      "  Lack of Efficacy",
      "  Protocol Violation",
      "  Withdrawal of Consent",
      "  Lost to Follow-up",
      "  Administrative",
      "  Other",
      "Analysis Populations",
      "  Intent-to-Treat (ITT)",
      "  Per Protocol (PP)",
      "  Safety",
      "  Pharmacokinetic",
      "Protocol Deviations",
      "  Major Deviations",
      "    Eligibility Violations",
      "    Treatment Violations",
      "    Assessment Violations",
      "  Minor Deviations",
      "    Documentation Issues",
      "    Timing Issues",
      "    Other Minor Issues"
    ],
    "footnotes": [
      "N = Number of subjects in the analysis population",
      "n = Number of subjects in the specified category",
      "ITT = Intent-to-Treat population",
      "PP = Per Protocol population",
      "Percentages are based on the number of subjects in each treatment group",
      "Missing data are not included in the percentage calculations",
      "Major deviations are those that may affect the validity of the study results",
      "Minor deviations are those that are unlikely to affect the study results"
    ],
    "statistical_notes": [
      "Subject disposition is summarized using frequency counts and percentages",
      "Percentages are calculated as (n/N) Ã— 100 for each treatment group",
      "Analysis populations are defined according to the Statistical Analysis Plan",
      "Protocol deviations are classified as major or minor based on their potential impact",
      "No formal statistical testing was performed for disposition data"
    ]
  },
  "r_code": {
    "libraries": [
      "library(dplyr)",
      "library(tidyr)",
      "library(haven)",
      "library(gt)",
      "library(flextable)",
      "library(officer)",
      "library(stringr)",
      "library(scales)"
    ],
    "data_preparation": [
      "# Load ADSL dataset",
      "adsl <- read_sas('data/adam/adsl.sas7bdat')",
      "",
      "# Define treatment groups",
      "adsl$TRT01P <- factor(adsl$TRT01P, levels = c('Placebo', 'Treatment A', 'Treatment B'))",
      "",
      "# Create disposition data",
      "disposition_data <- adsl %>%",
      "  mutate(",
      "    # Create disposition flags",
      "    SCREENED = 'Screened',",
      "    RANDOMIZED = case_when(",
      "      !is.na(USUBJID) ~ 'Randomized',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    TREATED = case_when(",
      "      SAFFL == 'Y' ~ 'Treated',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    COMPLETED = case_when(",
      "      COMPLFL == 'Y' ~ 'Completed Study',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISCONTINUED = case_when(",
      "      COMPLFL == 'N' ~ 'Discontinued',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    # Discontinuation reasons",
      "    DISC_AE = case_when(",
      "      DCSREAS == 'ADVERSE EVENT' ~ 'Adverse Event',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISC_EFFICACY = case_when(",
      "      DCSREAS == 'LACK OF EFFICACY' ~ 'Lack of Efficacy',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISC_PROTOCOL = case_when(",
      "      DCSREAS == 'PROTOCOL VIOLATION' ~ 'Protocol Violation',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISC_CONSENT = case_when(",
      "      DCSREAS == 'WITHDRAWAL OF CONSENT' ~ 'Withdrawal of Consent',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISC_LOST = case_when(",
      "      DCSREAS == 'LOST TO FOLLOW-UP' ~ 'Lost to Follow-up',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISC_ADMIN = case_when(",
      "      DCSREAS == 'ADMINISTRATIVE' ~ 'Administrative',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    DISC_OTHER = case_when(",
      "      DCSREAS == 'OTHER' ~ 'Other',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    # Analysis populations",
      "    ITT_POP = case_when(",
      "      ITTFL == 'Y' ~ 'Intent-to-Treat (ITT)',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    PP_POP = case_when(",
      "      PPFL == 'Y' ~ 'Per Protocol (PP)',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    SAFETY_POP = case_when(",
      "      SAFFL == 'Y' ~ 'Safety',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    PK_POP = case_when(",
      "      PKFL == 'Y' ~ 'Pharmacokinetic',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    # Protocol deviations",
      "    MAJOR_DEV = case_when(",
      "      PDEVFL == 'Y' & PDEVSEV == 'MAJOR' ~ 'Major Deviations',",
      "      TRUE ~ NA_character_",
      "    ),",
      "    MINOR_DEV = case_when(",
      "      PDEVFL == 'Y' & PDEVSEV == 'MINOR' ~ 'Minor Deviations',",
      "      TRUE ~ NA_character_",
      "    )",
      "  )"
    ],
    "statistical_analysis": [
      "# Function to create disposition summary",
      "create_disposition_summary <- function(data, var_name, var_label) {",
      "  data %>%",
      "    filter(!is.na(!!sym(var_name))) %>%",
      "    group_by(TRT01P, !!sym(var_name)) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    ) %>%",
      "    mutate(",
      "      Disposition = var_label,",
      "      Category = !!sym(var_name)",
      "    )",
      "}",
      "",
      "# Function to create discontinuation reason summary",
      "create_discontinuation_summary <- function(data) {",
      "  data %>%",
      "    filter(COMPLFL == 'N') %>%",
      "    group_by(TRT01P, DCSREAS) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    ) %>%",
      "    mutate(",
      "      Disposition = 'Discontinued',",
      "      Category = case_when(",
      "        DCSREAS == 'ADVERSE EVENT' ~ 'Adverse Event',",
      "        DCSREAS == 'LACK OF EFFICACY' ~ 'Lack of Efficacy',",
      "        DCSREAS == 'PROTOCOL VIOLATION' ~ 'Protocol Violation',",
      "        DCSREAS == 'WITHDRAWAL OF CONSENT' ~ 'Withdrawal of Consent',",
      "        DCSREAS == 'LOST TO FOLLOW-UP' ~ 'Lost to Follow-up',",
      "        DCSREAS == 'ADMINISTRATIVE' ~ 'Administrative',",
      "        DCSREAS == 'OTHER' ~ 'Other',",
      "        TRUE ~ DCSREAS",
      "      )",
      "    )",
      "}",
      "",
      "# Function to create protocol deviation summary",
      "create_protocol_deviation_summary <- function(data) {",
      "  # Major deviations",
      "  major_dev <- data %>%",
      "    filter(PDEVFL == 'Y', PDEVSEV == 'MAJOR') %>%",
      "    group_by(TRT01P, PDEVGRP) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    ) %>%",
      "    mutate(",
      "      Disposition = 'Major Deviations',",
      "      Category = case_when(",
      "        PDEVGRP == 'ELIGIBILITY' ~ 'Eligibility Violations',",
      "        PDEVGRP == 'TREATMENT' ~ 'Treatment Violations',",
      "        PDEVGRP == 'ASSESSMENT' ~ 'Assessment Violations',",
      "        TRUE ~ PDEVGRP",
      "      )",
      "    )",
      "  ",
      "  # Minor deviations",
      "  minor_dev <- data %>%",
      "    filter(PDEVFL == 'Y', PDEVSEV == 'MINOR') %>%",
      "    group_by(TRT01P, PDEVGRP) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    ) %>%",
      "    mutate(",
      "      Disposition = 'Minor Deviations',",
      "      Category = case_when(",
      "        PDEVGRP == 'DOCUMENTATION' ~ 'Documentation Issues',",
      "        PDEVGRP == 'TIMING' ~ 'Timing Issues',",
      "        TRUE ~ 'Other Minor Issues'",
      "      )",
      "    )",
      "  ",
      "  return(bind_rows(major_dev, minor_dev))",
      "}",
      "",
      "# Create summaries for each disposition category",
      "screened_summary <- create_disposition_summary(disposition_data, 'SCREENED', 'Screened')",
      "randomized_summary <- create_disposition_summary(disposition_data, 'RANDOMIZED', 'Randomized')",
      "treated_summary <- create_disposition_summary(disposition_data, 'TREATED', 'Treated')",
      "completed_summary <- create_disposition_summary(disposition_data, 'COMPLETED', 'Completed Study')",
      "discontinued_summary <- create_disposition_summary(disposition_data, 'DISCONTINUED', 'Discontinued')",
      "disc_reasons_summary <- create_discontinuation_summary(disposition_data)",
      "itt_summary <- create_disposition_summary(disposition_data, 'ITT_POP', 'Intent-to-Treat (ITT)')",
      "pp_summary <- create_disposition_summary(disposition_data, 'PP_POP', 'Per Protocol (PP)')",
      "safety_summary <- create_disposition_summary(disposition_data, 'SAFETY_POP', 'Safety')",
      "pk_summary <- create_disposition_summary(disposition_data, 'PK_POP', 'Pharmacokinetic')",
      "deviation_summary <- create_protocol_deviation_summary(disposition_data)",
      "",
      "# Combine all summaries",
      "disposition_summary <- bind_rows(",
      "  screened_summary,",
      "  randomized_summary,",
      "  treated_summary,",
      "  completed_summary,",
      "  discontinued_summary,",
      "  disc_reasons_summary %>% filter(!is.na(Category)),",
      "  itt_summary %>% filter(!is.na(Category)),",
      "  pp_summary %>% filter(!is.na(Category)),",
      "  safety_summary %>% filter(!is.na(Category)),",
      "  pk_summary %>% filter(!is.na(Category)),",
      "  deviation_summary",
      ")"
    ],
    "table_generation": [
      "# Create table data with proper formatting",
      "table_data <- disposition_summary %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = pct,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    Total = pct  # This would need to be calculated separately",
      "  ) %>%",
      "  select(Disposition, Category, Placebo, `Treatment A`, `Treatment B`, Total)",
      "",
      "# Calculate total column separately",
      "total_summary <- disposition_data %>%",
      "  group_by(Disposition, Category) %>%",
      "  summarise(",
      "    n_total = n_distinct(USUBJID),",
      "    .groups = 'drop'",
      "  ) %>%",
      "  group_by(Disposition) %>%",
      "  mutate(",
      "    total_subjects = sum(n_total),",
      "    total_pct = sprintf('%.0f (%.1f%%)', n_total, 100 * n_total / total_subjects)",
      "  )",
      "",
      "# Merge total column",
      "table_data <- table_data %>%",
      "  left_join(total_summary %>% select(Disposition, Category, total_pct),",
      "            by = c('Disposition', 'Category')) %>%",
      "  mutate(Total = total_pct) %>%",
      "  select(-total_pct)",
      "",
      "# Create the final table with FDA-compliant formatting",
      "disposition_table <- gt(table_data) %>%",
      "  tab_header(",
      "    title = 'Table 14.1.2 Subject Disposition',",
      "    subtitle = 'All Randomized Subjects'",
      "  ) %>%",
      "  cols_label(",
      "    Disposition = 'Disposition',",
      "    Category = 'Category',",
      "    Placebo = 'Placebo\\n(N=XXX)\\nn (%)',",
      "    `Treatment A` = 'Treatment A\\n(N=XXX)\\nn (%)',",
      "    `Treatment B` = 'Treatment B\\n(N=XXX)\\nn (%)',",
      "    Total = 'Total\\n(N=XXX)\\nn (%)'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_body(columns = 'Disposition')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(style = 'italic'),",
      "    locations = cells_body(columns = 'Category')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(1)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25)",
      "    )",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'N = Number of subjects in the analysis population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'n = Number of subjects in the specified category',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'ITT = Intent-to-Treat population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'PP = Per Protocol population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Percentages are based on the number of subjects in each treatment group',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Missing data are not included in the percentage calculations',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Major deviations are those that may affect the validity of the study results',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Minor deviations are those that are unlikely to affect the study results',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display the table",
      "disposition_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "validation_checks <- list(",
      "  # Missing data check",
      "  missing_data = disposition_data %>% summarise(",
      "    missing_itt = sum(is.na(ITTFL)),",
      "    missing_safety = sum(is.na(SAFFL)),",
      "    missing_complete = sum(is.na(COMPLFL)),",
      "    missing_dcsreas = sum(is.na(DCSREAS)),",
      "    missing_pdev = sum(is.na(PDEVFL))",
      "  ),",
      "  ",
      "  # Sample size validation",
      "  sample_sizes = disposition_data %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(n = n_distinct(USUBJID), .groups = 'drop'),",
      "  ",
      "  # Discontinuation analysis",
      "  discontinuation_analysis = disposition_data %>%",
      "    filter(COMPLFL == 'N') %>%",
      "    group_by(TRT01P, DCSREAS) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects)),",
      "  ",
      "  # Protocol deviation analysis",
      "  protocol_deviation_analysis = disposition_data %>%",
      "    filter(PDEVFL == 'Y') %>%",
      "    group_by(TRT01P, PDEVSEV, PDEVGRP) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects)),",
      "  ",
      "  # Population analysis",
      "  population_analysis = disposition_data %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(",
      "      n_total = n_distinct(USUBJID),",
      "      n_itt = sum(ITTFL == 'Y', na.rm = TRUE),",
      "      n_pp = sum(PPFL == 'Y', na.rm = TRUE),",
      "      n_safety = sum(SAFFL == 'Y', na.rm = TRUE),",
      "      n_pk = sum(PKFL == 'Y', na.rm = TRUE),",
      "      n_complete = sum(COMPLFL == 'Y', na.rm = TRUE),",
      "      n_discontinued = sum(COMPLFL == 'N', na.rm = TRUE),",
      "      .groups = 'drop'",
      "    )",
      ")"
    ],
    "export_functions": [
      "# Function to export table to Word document",
      "export_to_word <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Create Word document",
      "  doc <- read_docx() %>%",
      "    body_add_flextable(ft) %>%",
      "    body_add_par('', style = 'Normal') %>%",
      "    body_add_par('Source: Clinical Study Report', style = 'Normal') %>%",
      "    body_add_par(paste('Generated on:', Sys.Date()), style = 'Normal')",
      "  ",
      "  # Save document",
      "  print(doc, target = filename)",
      "}",
      "",
      "# Function to export table to PDF",
      "export_to_pdf <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Save as PDF",
      "  save_as_docx(ft, path = filename)",
      "}",
      "",
      "# Export the disposition table",
      "export_to_word(disposition_table, 'output/Table_14_1_2_Disposition.docx')",
      "export_to_pdf(disposition_table, 'output/Table_14_1_2_Disposition.pdf')"
    ]
  },
  "keywords": [
    "disposition", "demographics", "fda", "ich", "clinical", "trial", 
    "statistics", "population", "screened", "randomized", "treated",
    "completed", "discontinued", "protocol", "deviations", "analysis"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant subject disposition template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.1.2",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "Statistical Analysis Plan Template"
    ],
    "data_requirements": [
      "ADSL dataset with disposition variables",
      "Disposition variables: ITTFL, PPFL, SAFFL, PKFL, COMPLFL, DCSREAS",
      "Protocol deviation variables: PDEVFL, PDEVSEV, PDEVGRP",
      "Treatment assignment: TRT01P",
      "Subject identifiers: USUBJID"
    ],
    "statistical_methods": [
      "Descriptive statistics for disposition data",
      "Frequency counts and percentages for disposition categories",
      "No formal statistical testing for disposition data",
      "Missing data handling: excluded from percentage calculations",
      "Protocol deviation classification and impact assessment"
    ]
  }
} 