{
  "id": "fda-ae-detailed-001",
  "title": "Table 14.3.1 Summary of Adverse Events",
  "type": "table",
  "category": "safety",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.3",
    "population": "Safety Population",
    "statistical_method": "Descriptive statistics",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review"],
    "regulatory_requirements": [
      "ICH E3 Guidelines Section 14.3.1",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "MedDRA Terminology",
      "CDISC ADaM Implementation Guide"
    ]
  },
  "template_structure": {
    "title": "Table 14.3.1 Summary of Adverse Events",
    "subtitle": "Safety Population",
    "columns": [
      "System Organ Class\nPreferred Term",
      "Placebo\n(N=XXX)\nSubjects\nn (%)",
      "Treatment A\n(N=XXX)\nSubjects\nn (%)",
      "Treatment B\n(N=XXX)\nSubjects\nn (%)",
      "Total\n(N=XXX)\nSubjects\nn (%)"
    ],
    "rows": [
      "Any Adverse Event",
      "Any Serious Adverse Event",
      "Any Treatment-Emergent Adverse Event",
      "Any Treatment-Related Adverse Event",
      "Any Adverse Event Leading to Discontinuation",
      "Any Adverse Event Leading to Death",
      "Gastrointestinal Disorders",
      "  Nausea",
      "  Diarrhea",
      "  Vomiting",
      "  Abdominal pain",
      "  Constipation",
      "  Dyspepsia",
      "Nervous System Disorders",
      "  Headache",
      "  Dizziness",
      "  Somnolence",
      "  Insomnia",
      "  Tremor",
      "  Paresthesia",
      "General Disorders and Administration Site Conditions",
      "  Fatigue",
      "  Injection site reaction",
      "  Pyrexia",
      "  Edema",
      "  Pain",
      "Infections and Infestations",
      "  Upper respiratory tract infection",
      "  Nasopharyngitis",
      "  Urinary tract infection",
      "  Influenza",
      "Musculoskeletal and Connective Tissue Disorders",
      "  Arthralgia",
      "  Myalgia",
      "  Back pain",
      "  Pain in extremity",
      "Respiratory, Thoracic and Mediastinal Disorders",
      "  Cough",
      "  Dyspnea",
      "  Nasal congestion",
      "  Sore throat",
      "Skin and Subcutaneous Tissue Disorders",
      "  Rash",
      "  Pruritus",
      "  Erythema",
      "  Urticaria",
      "Metabolism and Nutrition Disorders",
      "  Decreased appetite",
      "  Weight decreased",
      "  Hyperglycemia",
      "  Hypokalemia",
      "Psychiatric Disorders",
      "  Anxiety",
      "  Depression",
      "  Irritability",
      "  Mood changes",
      "Cardiac Disorders",
      "  Palpitations",
      "  Tachycardia",
      "  Hypertension",
      "  Hypotension",
      "Vascular Disorders",
      "  Hot flush",
      "  Hypertension",
      "  Hypotension",
      "  Flushing",
      "Eye Disorders",
      "  Vision blurred",
      "  Dry eye",
      "  Eye pain",
      "  Photophobia",
      "Ear and Labyrinth Disorders",
      "  Tinnitus",
      "  Vertigo",
      "  Hearing impaired",
      "  Ear pain",
      "Renal and Urinary Disorders",
      "  Dysuria",
      "  Pollakiuria",
      "  Urinary incontinence",
      "  Hematuria",
      "Reproductive System and Breast Disorders",
      "  Erectile dysfunction",
      "  Menstrual disorder",
      "  Breast pain",
      "  Gynecomastia",
      "Blood and Lymphatic System Disorders",
      "  Anemia",
      "  Leukopenia",
      "  Thrombocytopenia",
      "  Lymphadenopathy",
      "Immune System Disorders",
      "  Hypersensitivity",
      "  Drug hypersensitivity",
      "  Anaphylactic reaction",
      "  Autoimmune disorder",
      "Endocrine Disorders",
      "  Hyperthyroidism",
      "  Hypothyroidism",
      "  Diabetes mellitus",
      "  Adrenal insufficiency",
      "Hepatobiliary Disorders",
      "  Alanine aminotransferase increased",
      "  Aspartate aminotransferase increased",
      "  Gamma-glutamyltransferase increased",
      "  Hepatic enzyme increased"
    ],
    "footnotes": [
      "Safety population = All randomized subjects who received at least one dose of study drug",
      "N = Number of subjects in the analysis population",
      "n = Number of subjects with at least one event",
      "Subjects with multiple events in the same category are counted only once",
      "Treatment-emergent adverse events are events that occurred after the first dose of study drug",
      "Treatment-related adverse events are events considered by the investigator to be related to study drug",
      "Serious adverse events are events that resulted in death, were life-threatening, required hospitalization, resulted in disability, or were congenital anomalies",
      "Percentages are based on the number of subjects in each treatment group",
      "Missing data are not included in the percentage calculations",
      "MedDRA version 25.1 was used for coding adverse events"
    ],
    "statistical_notes": [
      "Adverse events are summarized using frequency counts and percentages",
      "Subjects with multiple events in the same category are counted only once",
      "Events are coded using MedDRA terminology",
      "No formal statistical testing was performed for adverse events",
      "Percentages are calculated as (n/N) Ã— 100 for each treatment group"
    ]
  },
  "r_code": {
    "libraries": [
      "library(dplyr)",
      "library(tidyr)",
      "library(haven)",
      "library(gt)",
      "library(flextable)",
      "library(officer)",
      "library(stringr)",
      "library(scales)"
    ],
    "data_preparation": [
      "# Load ADSL and ADAE datasets",
      "adsl <- read_sas('data/adam/adsl.sas7bdat')",
      "adae <- read_sas('data/adam/adae.sas7bdat')",
      "",
      "# Define treatment groups",
      "adsl$TRT01P <- factor(adsl$TRT01P, levels = c('Placebo', 'Treatment A', 'Treatment B'))",
      "",
      "# Create safety population",
      "safety_pop <- adsl %>% filter(SAFFL == 'Y')",
      "",
      "# Merge with AE data",
      "ae_data <- safety_pop %>%",
      "  left_join(adae, by = 'USUBJID') %>%",
      "  filter(AOCCPFL == 'Y') %>%  # Treatment-emergent AEs",
      "  mutate(",
      "    # Create summary flags",
      "    ANY_AE = 'Any Adverse Event',",
      "    ANY_SAE = case_when(AESER == 'Y' ~ 'Any Serious Adverse Event', TRUE ~ NA_character_),",
      "    ANY_TEAE = 'Any Treatment-Emergent Adverse Event',",
      "    ANY_RELATED = case_when(AEREL == 'Y' ~ 'Any Treatment-Related Adverse Event', TRUE ~ NA_character_),",
      "    ANY_DISC = case_when(AEACN == 'DRUG WITHDRAWN' ~ 'Any Adverse Event Leading to Discontinuation', TRUE ~ NA_character_),",
      "    ANY_DEATH = case_when(AEOUT == 'FATAL' ~ 'Any Adverse Event Leading to Death', TRUE ~ NA_character_),",
      "    ",
      "    # Create SOC/PT combinations",
      "    SOC_PT = paste(AEBODSYS, AEDECOD, sep = ' - '),",
      "    ",
      "    # Ensure proper SOC and PT values",
      "    AEBODSYS = ifelse(is.na(AEBODSYS), 'Unknown', AEBODSYS),",
      "    AEDECOD = ifelse(is.na(AEDECOD), 'Unknown', AEDECOD)",
      "  )"
    ],
    "statistical_analysis": [
      "# Function to create AE summary",
      "create_ae_summary <- function(data, var_name, var_label) {",
      "  data %>%",
      "    filter(!is.na(!!sym(var_name))) %>%",
      "    group_by(TRT01P, !!sym(var_name)) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    ) %>%",
      "    mutate(",
      "      Parameter = var_label,",
      "      Category = !!sym(var_name)",
      "    )",
      "}",
      "",
      "# Function to create SOC/PT summary",
      "create_soc_pt_summary <- function(data) {",
      "  data %>%",
      "    group_by(TRT01P, AEBODSYS, AEDECOD) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_subjects = sum(n_subjects),",
      "      pct = sprintf('%.0f (%.1f%%)', n_subjects, 100 * n_subjects / total_subjects)",
      "    ) %>%",
      "    mutate(",
      "      Parameter = AEBODSYS,",
      "      Category = AEDECOD",
      "    )",
      "}",
      "",
      "# Create summaries for each parameter",
      "any_ae_summary <- create_ae_summary(ae_data, 'ANY_AE', 'Any Adverse Event')",
      "any_sae_summary <- create_ae_summary(ae_data, 'ANY_SAE', 'Any Serious Adverse Event')",
      "any_teae_summary <- create_ae_summary(ae_data, 'ANY_TEAE', 'Any Treatment-Emergent Adverse Event')",
      "any_related_summary <- create_ae_summary(ae_data, 'ANY_RELATED', 'Any Treatment-Related Adverse Event')",
      "any_disc_summary <- create_ae_summary(ae_data, 'ANY_DISC', 'Any Adverse Event Leading to Discontinuation')",
      "any_death_summary <- create_ae_summary(ae_data, 'ANY_DEATH', 'Any Adverse Event Leading to Death')",
      "",
      "# SOC/PT summaries",
      "soc_pt_summary <- create_soc_pt_summary(ae_data)",
      "",
      "# Combine all summaries",
      "ae_summary <- bind_rows(",
      "  any_ae_summary,",
      "  any_sae_summary %>% filter(!is.na(Category)),",
      "  any_teae_summary,",
      "  any_related_summary %>% filter(!is.na(Category)),",
      "  any_disc_summary %>% filter(!is.na(Category)),",
      "  any_death_summary %>% filter(!is.na(Category)),",
      "  soc_pt_summary",
      ")"
    ],
    "table_generation": [
      "# Create table data with proper formatting",
      "table_data <- ae_summary %>%",
      "  pivot_wider(",
      "    names_from = TRT01P,",
      "    values_from = pct,",
      "    names_prefix = 'trt_'",
      "  ) %>%",
      "  mutate(",
      "    Placebo = trt_Placebo,",
      "    `Treatment A` = `trt_Treatment A`,",
      "    `Treatment B` = `trt_Treatment B`,",
      "    Total = pct  # This would need to be calculated separately",
      "  ) %>%",
      "  select(Parameter, Category, Placebo, `Treatment A`, `Treatment B`, Total)",
      "",
      "# Calculate total column separately",
      "total_summary <- ae_data %>%",
      "  group_by(Parameter, Category) %>%",
      "  summarise(",
      "    n_total = n_distinct(USUBJID),",
      "    .groups = 'drop'",
      "  ) %>%",
      "  group_by(Parameter) %>%",
      "  mutate(",
      "    total_subjects = sum(n_total),",
      "    total_pct = sprintf('%.0f (%.1f%%)', n_total, 100 * n_total / total_subjects)",
      "  )",
      "",
      "# Merge total column",
      "table_data <- table_data %>%",
      "  left_join(total_summary %>% select(Parameter, Category, total_pct),",
      "            by = c('Parameter', 'Category')) %>%",
      "  mutate(Total = total_pct) %>%",
      "  select(-total_pct)",
      "",
      "# Create the final table with FDA-compliant formatting",
      "ae_table <- gt(table_data) %>%",
      "  tab_header(",
      "    title = 'Table 14.3.1 Summary of Adverse Events',",
      "    subtitle = 'Safety Population'",
      "  ) %>%",
      "  cols_label(",
      "    Parameter = 'System Organ Class\\nPreferred Term',",
      "    Category = 'Category',",
      "    Placebo = 'Placebo\\n(N=XXX)\\nSubjects\\nn (%)',",
      "    `Treatment A` = 'Treatment A\\n(N=XXX)\\nSubjects\\nn (%)',",
      "    `Treatment B` = 'Treatment B\\n(N=XXX)\\nSubjects\\nn (%)',",
      "    Total = 'Total\\n(N=XXX)\\nSubjects\\nn (%)'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_body(columns = 'Parameter')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(style = 'italic'),",
      "    locations = cells_body(columns = 'Category')",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(1)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100)",
      "    )",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Safety population = All randomized subjects who received at least one dose of study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'N = Number of subjects in the analysis population',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'n = Number of subjects with at least one event',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Subjects with multiple events in the same category are counted only once',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Treatment-emergent adverse events are events that occurred after the first dose of study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Treatment-related adverse events are events considered by the investigator to be related to study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Serious adverse events are events that resulted in death, were life-threatening, required hospitalization, resulted in disability, or were congenital anomalies',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Percentages are based on the number of subjects in each treatment group',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Missing data are not included in the percentage calculations',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'MedDRA version 25.1 was used for coding adverse events',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display the table",
      "ae_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "validation_checks <- list(",
      "  # Missing data check",
      "  missing_data = ae_data %>% summarise(",
      "    missing_ae = sum(is.na(AEDECOD)),",
      "    missing_soc = sum(is.na(AEBODSYS)),",
      "    missing_serious = sum(is.na(AESER)),",
      "    missing_related = sum(is.na(AEREL)),",
      "    missing_outcome = sum(is.na(AEOUT)),",
      "    missing_action = sum(is.na(AEACN))",
      "  ),",
      "  ",
      "  # Sample size validation",
      "  sample_sizes = ae_data %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(n = n_distinct(USUBJID), .groups = 'drop'),",
      "  ",
      "  # AE frequency analysis",
      "  ae_frequency = ae_data %>%",
      "    group_by(TRT01P, AEDECOD) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      n_events = n(),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects))",
      "  ",
      "  # Serious AE analysis",
      "  sae_analysis = ae_data %>%",
      "    filter(AESER == 'Y') %>%",
      "    group_by(TRT01P, AEBODSYS, AEDECOD) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      n_events = n(),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects)),",
      "  ",
      "  # Treatment-related AE analysis",
      "  related_ae_analysis = ae_data %>%",
      "    filter(AEREL == 'Y') %>%",
      "    group_by(TRT01P, AEBODSYS, AEDECOD) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      n_events = n(),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects)),",
      "  ",
      "  # Discontinuation analysis",
      "  disc_analysis = ae_data %>%",
      "    filter(AEACN == 'DRUG WITHDRAWN') %>%",
      "    group_by(TRT01P, AEBODSYS, AEDECOD) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      n_events = n(),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects)),",
      "  ",
      "  # Death analysis",
      "  death_analysis = ae_data %>%",
      "    filter(AEOUT == 'FATAL') %>%",
      "    group_by(TRT01P, AEBODSYS, AEDECOD) %>%",
      "    summarise(",
      "      n_subjects = n_distinct(USUBJID),",
      "      n_events = n(),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    arrange(desc(n_subjects))",
      ")"
    ],
    "export_functions": [
      "# Function to export table to Word document",
      "export_to_word <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Create Word document",
      "  doc <- read_docx() %>%",
      "    body_add_flextable(ft) %>%",
      "    body_add_par('', style = 'Normal') %>%",
      "    body_add_par('Source: Clinical Study Report', style = 'Normal') %>%",
      "    body_add_par(paste('Generated on:', Sys.Date()), style = 'Normal')",
      "  ",
      "  # Save document",
      "  print(doc, target = filename)",
      "}",
      "",
      "# Function to export table to PDF",
      "export_to_pdf <- function(table, filename) {",
      "  # Convert gt table to flextable",
      "  ft <- as_flextable(table)",
      "  ",
      "  # Save as PDF",
      "  save_as_docx(ft, path = filename)",
      "}",
      "",
      "# Export the AE table",
      "export_to_word(ae_table, 'output/Table_14_3_1_Adverse_Events.docx')",
      "export_to_pdf(ae_table, 'output/Table_14_3_1_Adverse_Events.pdf')"
    ]
  },
  "keywords": [
    "adverse", "events", "safety", "fda", "ich", "clinical", "trial", 
    "statistics", "population", "meddra", "soc", "pt", "serious", "related",
    "discontinuation", "death", "gastrointestinal", "nervous", "general",
    "infections", "musculoskeletal", "respiratory", "skin", "metabolism",
    "psychiatric", "cardiac", "vascular", "eye", "ear", "renal", "reproductive",
    "blood", "immune", "endocrine", "hepatobiliary"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant adverse events summary table template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.3.1",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "MedDRA Terminology",
      "CDISC ADaM Implementation Guide",
      "Statistical Analysis Plan Template"
    ],
    "data_requirements": [
      "ADSL dataset with SAFFL flag",
      "ADAE dataset with treatment-emergent AE flag (AOCCPFL)",
      "AE variables: AEDECOD, AEBODSYS, AESER, AEREL, AEOUT, AEACN",
      "Treatment assignment: TRT01P"
    ],
    "statistical_methods": [
      "Descriptive statistics for adverse events",
      "Frequency counts and percentages for AE categories",
      "No formal statistical testing for adverse events",
      "Missing data handling: excluded from percentage calculations",
      "MedDRA coding for AE terminology"
    ]
  }
} 