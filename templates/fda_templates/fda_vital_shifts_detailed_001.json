{
  "id": "fda-vital-shifts-detailed-001",
  "title": "Table 14.3.6 Vital Signs Shifts Analysis",
  "type": "table",
  "category": "safety",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.3.6",
    "population": "Safety Population",
    "statistical_method": "Shift Table Analysis",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review", "threshold_monitoring"],
    "regulatory_requirements": [
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "ICH E3 Guidelines Section 14.3",
      "CDISC ADaM Implementation Guide",
      "Vital Signs Safety Monitoring Guidelines"
    ]
  },
  "template_structure": {
    "title": "Table 14.3.6 Vital Signs Shifts Analysis",
    "subtitle": "Clinically Significant Vital Signs Changes by Treatment Group",
    "table_type": "vital_signs_shifts",
    "columns": [
      {
        "name": "Parameter",
        "type": "text",
        "description": "Vital signs parameter name"
      },
      {
        "name": "Threshold",
        "type": "text",
        "description": "Clinical significance threshold"
      },
      {
        "name": "Shift Category",
        "type": "text",
        "description": "Change from baseline to post-baseline"
      },
      {
        "name": "Treatment A",
        "type": "statistical",
        "description": "n/N (%) for Treatment A",
        "statistics": ["shift_count", "total_count", "percentage"]
      },
      {
        "name": "Treatment B",
        "type": "statistical",
        "description": "n/N (%) for Treatment B",
        "statistics": ["shift_count", "total_count", "percentage"]
      },
      {
        "name": "Placebo",
        "type": "statistical",
        "description": "n/N (%) for Placebo",
        "statistics": ["shift_count", "total_count", "percentage"]
      },
      {
        "name": "Treatment A vs Placebo",
        "type": "comparison",
        "description": "Risk Difference (95% CI)",
        "statistics": ["risk_difference", "ci_lower", "ci_upper", "p_value"]
      },
      {
        "name": "Treatment B vs Placebo",
        "type": "comparison",
        "description": "Risk Difference (95% CI)",
        "statistics": ["risk_difference", "ci_lower", "ci_upper", "p_value"]
      },
      {
        "name": "Safety Alert",
        "type": "text",
        "description": "Safety monitoring alert level"
      }
    ],
    "rows": [
      {
        "category": "Blood Pressure",
        "parameters": [
          {
            "name": "Systolic Blood Pressure",
            "paramcd": "SYSBP",
            "category": "Blood Pressure",
            "baseline_var": "BASE_SYSBP",
            "post_var": "POST_SYSBP",
            "threshold_low": 90,
            "threshold_high": 140,
            "clinical_threshold": "≥20 mmHg increase or ≥20 mmHg decrease"
          },
          {
            "name": "Diastolic Blood Pressure",
            "paramcd": "DIABP",
            "category": "Blood Pressure",
            "baseline_var": "BASE_DIABP",
            "post_var": "POST_DIABP",
            "threshold_low": 60,
            "threshold_high": 90,
            "clinical_threshold": "≥10 mmHg increase or ≥10 mmHg decrease"
          }
        ]
      },
      {
        "category": "Heart Rate",
        "parameters": [
          {
            "name": "Heart Rate",
            "paramcd": "PULSE",
            "category": "Heart Rate",
            "baseline_var": "BASE_PULSE",
            "post_var": "POST_PULSE",
            "threshold_low": 60,
            "threshold_high": 100,
            "clinical_threshold": "≥20 bpm increase or ≥20 bpm decrease"
          }
        ]
      },
      {
        "category": "Temperature",
        "parameters": [
          {
            "name": "Temperature",
            "paramcd": "TEMP",
            "category": "Temperature",
            "baseline_var": "BASE_TEMP",
            "post_var": "POST_TEMP",
            "threshold_low": 36.0,
            "threshold_high": 37.5,
            "clinical_threshold": "≥1°C increase or ≥1°C decrease"
          }
        ]
      },
      {
        "category": "Respiratory Rate",
        "parameters": [
          {
            "name": "Respiratory Rate",
            "paramcd": "RESP",
            "category": "Respiratory Rate",
            "baseline_var": "BASE_RESP",
            "post_var": "POST_RESP",
            "threshold_low": 12,
            "threshold_high": 20,
            "clinical_threshold": "≥5 breaths/min increase or ≥5 breaths/min decrease"
          }
        ]
      },
      {
        "category": "Weight",
        "parameters": [
          {
            "name": "Weight",
            "paramcd": "WEIGHT",
            "category": "Weight",
            "baseline_var": "BASE_WEIGHT",
            "post_var": "POST_WEIGHT",
            "threshold_low": null,
            "threshold_high": null,
            "clinical_threshold": "≥5% increase or ≥5% decrease"
          }
        ]
      }
    ],
    "shift_categories": [
      "Normal → Normal",
      "Normal → High",
      "Normal → Low",
      "High → Normal",
      "High → High",
      "High → Low",
      "Low → Normal",
      "Low → High",
      "Low → Low",
      "Clinically Significant Increase",
      "Clinically Significant Decrease"
    ],
    "footnotes": [
      "Safety Population: All randomized subjects who received at least one dose of study drug",
      "Shift: Change from baseline to post-baseline vital signs category",
      "Normal: Within normal reference range",
      "High: Above upper limit of normal",
      "Low: Below lower limit of normal",
      "Clinically Significant: Changes meeting or exceeding clinical thresholds",
      "Risk Difference: Difference in shift rates between treatment groups",
      "95% CI: 95% confidence interval",
      "p-values from chi-square test or Fisher's exact test",
      "Safety Alert: Level of clinical concern based on shift frequency and magnitude",
      "Treatment A: High dose, Treatment B: Low dose"
    ],
    "statistical_methodology": {
      "primary_method": "Shift Table Analysis",
      "shift_calculation": "Cross-tabulation of baseline vs post-baseline vital signs categories",
      "clinical_significance": "Pre-specified thresholds for clinically meaningful changes",
      "risk_difference": "Difference in shift proportions between treatment groups",
      "confidence_intervals": "Wilson confidence intervals for proportions",
      "significance_test": "Chi-square test or Fisher's exact test",
      "significance_level": 0.05,
      "confidence_level": 0.95
    }
  },
  "r_code": {
    "libraries": [
      "library(tidyverse)",
      "library(haven)",
      "library(lubridate)",
      "library(gt)",
      "library(flextable)",
      "library(broom)",
      "library(PropCIs)"
    ],
    "data_preparation": [
      "# Load datasets",
      "adsl <- read_sas('data/adsl.sas7bdat')",
      "advs <- read_sas('data/advs.sas7bdat')",
      "",
      "# Filter for Safety population",
      "adsl_safety <- adsl %>% filter(SAFFL == 'Y')",
      "",
      "# Merge datasets",
      "analysis_data <- advs %>%",
      "  inner_join(adsl_safety, by = 'USUBJID') %>%",
      "  filter(PARAMCD %in% c('SYSBP', 'DIABP', 'PULSE', 'TEMP', 'RESP', 'WEIGHT')) %>%",
      "  filter(AVISIT %in% c('Baseline', 'Week 12')) %>%",
      "  mutate(",
      "    TRT01P = factor(TRT01P, levels = c('Placebo', 'Treatment B', 'Treatment A')),",
      "    AVISIT = factor(AVISIT, levels = c('Baseline', 'Week 12')),",
      "    PARAM_LABEL = case_when(",
      "      PARAMCD == 'SYSBP' ~ 'Systolic Blood Pressure',",
      "      PARAMCD == 'DIABP' ~ 'Diastolic Blood Pressure',",
      "      PARAMCD == 'PULSE' ~ 'Heart Rate',",
      "      PARAMCD == 'TEMP' ~ 'Temperature',",
      "      PARAMCD == 'RESP' ~ 'Respiratory Rate',",
      "      PARAMCD == 'WEIGHT' ~ 'Weight'",
      "    )",
      "  )",
      "",
      "# Define reference ranges and clinical thresholds",
      "reference_ranges <- list(",
      "  SYSBP = list(low = 90, high = 140, unit = 'mmHg'),",
      "  DIABP = list(low = 60, high = 90, unit = 'mmHg'),",
      "  PULSE = list(low = 60, high = 100, unit = 'bpm'),",
      "  TEMP = list(low = 36.0, high = 37.5, unit = '°C'),",
      "  RESP = list(low = 12, high = 20, unit = 'breaths/min'),",
      "  WEIGHT = list(low = NULL, high = NULL, unit = '% change')",
      ")",
      "",
      "clinical_thresholds <- list(",
      "  SYSBP = list(increase = 20, decrease = 20, unit = 'mmHg'),",
      "  DIABP = list(increase = 10, decrease = 10, unit = 'mmHg'),",
      "  PULSE = list(increase = 20, decrease = 20, unit = 'bpm'),",
      "  TEMP = list(increase = 1, decrease = 1, unit = '°C'),",
      "  RESP = list(increase = 5, decrease = 5, unit = 'breaths/min'),",
      "  WEIGHT = list(increase = 5, decrease = 5, unit = '%')",
      ")",
      "",
      "# Function to categorize vital signs",
      "categorize_vital_signs <- function(data, param_code) {",
      "  ranges <- reference_ranges[[param_code]]",
      "  ",
      "  if (param_code == 'WEIGHT') {",
      "    # Weight uses percentage change",
      "    data %>%",
      "      mutate(",
      "        category = case_when(",
      "          is.na(AVAL) ~ NA_character_,",
      "          TRUE ~ 'Normal'  # Weight doesn't have normal/abnormal categories",
      "        )",
      "      )",
      "  } else {",
      "    # Other vital signs use reference ranges",
      "    data %>%",
      "      mutate(",
      "        category = case_when(",
      "          is.na(AVAL) ~ NA_character_,",
      "          AVAL < ranges$low ~ 'Low',",
      "          AVAL > ranges$high ~ 'High',",
      "          TRUE ~ 'Normal'",
      "        )",
      "      )",
      "  }",
      "}",
      "",
      "# Function to assess clinical significance",
      "assess_clinical_significance <- function(data, param_code) {",
      "  thresholds <- clinical_thresholds[[param_code]]",
      "  ",
      "  if (param_code == 'WEIGHT') {",
      "    # Weight uses percentage change from baseline",
      "    data %>%",
      "      mutate(",
      "        clinical_significance = case_when(",
      "          is.na(CHG) ~ NA_character_,",
      "          CHG >= thresholds$increase ~ 'Clinically Significant Increase',",
      "          CHG <= -thresholds$decrease ~ 'Clinically Significant Decrease',",
      "          TRUE ~ 'No Clinically Significant Change'",
      "        )",
      "      )",
      "  } else {",
      "    # Other vital signs use absolute change",
      "    data %>%",
      "      mutate(",
      "        clinical_significance = case_when(",
      "          is.na(CHG) ~ NA_character_,",
      "          CHG >= thresholds$increase ~ 'Clinically Significant Increase',",
      "          CHG <= -thresholds$decrease ~ 'Clinically Significant Decrease',",
      "          TRUE ~ 'No Clinically Significant Change'",
      "        )",
      "      )",
      "  }",
      "}",
      "",
      "# Create shift data",
      "baseline_data <- analysis_data %>%",
      "  filter(AVISIT == 'Baseline') %>%",
      "  select(USUBJID, PARAMCD, AVAL) %>%",
      "  rename(BASELINE_AVAL = AVAL)",
      "",
      "post_data <- analysis_data %>%",
      "  filter(AVISIT == 'Week 12') %>%",
      "  select(USUBJID, PARAMCD, AVAL) %>%",
      "  rename(POST_AVAL = AVAL)",
      "",
      "# Merge baseline and post data",
      "shift_data <- baseline_data %>%",
      "  inner_join(post_data, by = c('USUBJID', 'PARAMCD')) %>%",
      "  mutate(CHG = POST_AVAL - BASELINE_AVAL)",
      "",
      "# Categorize vital signs",
      "for (param in names(reference_ranges)) {",
      "  baseline_cat <- categorize_vital_signs(baseline_data %>% filter(PARAMCD == param), param)",
      "  post_cat <- categorize_vital_signs(post_data %>% filter(PARAMCD == param), param)",
      "  ",
      "  # Add clinical significance",
      "  param_shift <- shift_data %>% filter(PARAMCD == param)",
      "  param_shift <- assess_clinical_significance(param_shift, param)",
      "  ",
      "  # Create shift categories",
      "  param_shift <- param_shift %>%",
      "    left_join(baseline_cat %>% select(USUBJID, PARAMCD, BASELINE_CATEGORY = category), by = c('USUBJID', 'PARAMCD')) %>%",
      "    left_join(post_cat %>% select(USUBJID, PARAMCD, POST_CATEGORY = category), by = c('USUBJID', 'PARAMCD')) %>%",
      "    mutate(",
      "      SHIFT_CATEGORY = case_when(",
      "        !is.na(clinical_significance) & clinical_significance != 'No Clinically Significant Change' ~ clinical_significance,",
      "        !is.na(BASELINE_CATEGORY) & !is.na(POST_CATEGORY) ~ paste(BASELINE_CATEGORY, '→', POST_CATEGORY),",
      "        TRUE ~ 'Missing'",
      "      )",
      "    )",
      "  ",
      "  if (param == names(reference_ranges)[1]) {",
      "    shift_data_final <- param_shift",
      "  } else {",
      "    shift_data_final <- rbind(shift_data_final, param_shift)",
      "  }",
      "}",
      "",
      "# Add treatment information",
      "shift_data_final <- shift_data_final %>%",
      "  left_join(adsl_safety %>% select(USUBJID, TRT01P), by = 'USUBJID')"
    ],
    "statistical_analysis": [
      "# Function to create vital signs shift table",
      "create_vital_shifts_table <- function(data, param_code) {",
      "  param_data <- data %>% filter(PARAMCD == param_code)",
      "  ",
      "  # Create shift table",
      "  shift_table <- param_data %>%",
      "    group_by(TRT01P, SHIFT_CATEGORY) %>%",
      "    summarise(",
      "      n_shifts = n(),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    group_by(TRT01P) %>%",
      "    mutate(",
      "      total_n = sum(n_shifts),",
      "      percentage = n_shifts / total_n * 100",
      "    ) %>%",
      "    ungroup()",
      "  ",
      "  return(shift_table)",
      "}",
      "",
      "# Function to calculate risk differences",
      "calculate_vital_risk_differences <- function(shift_table, shift_category) {",
      "  # Get counts for specific shift category",
      "  shift_counts <- shift_table %>%",
      "    filter(SHIFT_CATEGORY == shift_category)",
      "  ",
      "  # Calculate risk differences",
      "  placebo_count <- shift_counts %>% filter(TRT01P == 'Placebo') %>% pull(n_shifts)",
      "  placebo_total <- shift_counts %>% filter(TRT01P == 'Placebo') %>% pull(total_n)",
      "  ",
      "  if (length(placebo_count) == 0) {",
      "    return(data.frame())",
      "  }",
      "  ",
      "  risk_diffs <- shift_counts %>%",
      "    filter(TRT01P != 'Placebo') %>%",
      "    mutate(",
      "      placebo_rate = placebo_count / placebo_total,",
      "      treatment_rate = n_shifts / total_n,",
      "      risk_diff = treatment_rate - placebo_rate,",
      "      # Wilson confidence interval for risk difference",
      "      se_diff = sqrt(treatment_rate * (1 - treatment_rate) / total_n + placebo_rate * (1 - placebo_rate) / placebo_total),",
      "      ci_lower = risk_diff - 1.96 * se_diff,",
      "      ci_upper = risk_diff + 1.96 * se_diff,",
      "      # Chi-square test",
      "      p_value = chisq.test(matrix(c(n_shifts, total_n - n_shifts, placebo_count, placebo_total - placebo_count), nrow = 2))$p.value",
      "    )",
      "  ",
      "  return(risk_diffs)",
      "}",
      "",
      "# Vital signs parameters",
      "vital_params <- c('SYSBP', 'DIABP', 'PULSE', 'TEMP', 'RESP', 'WEIGHT')",
      "",
      "# Create shift tables for all parameters",
      "vital_shift_results <- list()",
      "for (param in vital_params) {",
      "  vital_shift_results[[param]] <- create_vital_shifts_table(shift_data_final, param)",
      "}",
      "",
      "# Calculate risk differences for clinically significant shifts",
      "vital_risk_diff_results <- list()",
      "for (param in vital_params) {",
      "  clinically_significant_shifts <- c(",
      "    'Clinically Significant Increase',",
      "    'Clinically Significant Decrease'",
      "  )",
      "  ",
      "  risk_diffs <- data.frame()",
      "  for (shift in clinically_significant_shifts) {",
      "    risk_diff <- calculate_vital_risk_differences(vital_shift_results[[param]], shift)",
      "    if (nrow(risk_diff) > 0) {",
      "      risk_diff$shift_category <- shift",
      "      risk_diffs <- rbind(risk_diffs, risk_diff)",
      "    }",
      "  }",
      "  ",
      "  vital_risk_diff_results[[param]] <- risk_diffs",
      "}"
    ],
    "table_generation": [
      "# Function to create vital signs shifts summary table",
      "create_vital_shifts_table <- function(shift_results, risk_diff_results, param_info) {",
      "  table_data <- data.frame()",
      "  ",
      "  for (param in names(shift_results)) {",
      "    shift_table <- shift_results[[param]]",
      "    risk_diffs <- risk_diff_results[[param]]",
      "    param_label <- param_info[[param]]$label",
      "    threshold <- param_info[[param]]$threshold",
      "    ",
      "    # Get clinically significant shifts",
      "    clinically_significant_shifts <- c(",
      "      'Clinically Significant Increase',",
      "      'Clinically Significant Decrease'",
      "    )",
      "    ",
      "    for (shift in clinically_significant_shifts) {",
      "      shift_data <- shift_table %>% filter(SHIFT_CATEGORY == shift)",
      "      ",
      "      if (nrow(shift_data) > 0) {",
      "        # Treatment A",
      "        trt_a <- shift_data %>% filter(TRT01P == 'Treatment A')",
      "        trt_a_rate <- ifelse(nrow(trt_a) > 0, sprintf('%d/%d (%.1f%%)', trt_a$n_shifts, trt_a$total_n, trt_a$percentage), '0/0 (0.0%)')",
      "        ",
      "        # Treatment B",
      "        trt_b <- shift_data %>% filter(TRT01P == 'Treatment B')",
      "        trt_b_rate <- ifelse(nrow(trt_b) > 0, sprintf('%d/%d (%.1f%%)', trt_b$n_shifts, trt_b$total_n, trt_b$percentage), '0/0 (0.0%)')",
      "        ",
      "        # Placebo",
      "        placebo <- shift_data %>% filter(TRT01P == 'Placebo')",
      "        placebo_rate <- ifelse(nrow(placebo) > 0, sprintf('%d/%d (%.1f%%)', placebo$n_shifts, placebo$total_n, placebo$percentage), '0/0 (0.0%)')",
      "        ",
      "        # Risk differences",
      "        risk_diff_data <- risk_diffs %>% filter(shift_category == shift)",
      "        ",
      "        trt_a_rd <- risk_diff_data %>% filter(TRT01P == 'Treatment A')",
      "        trt_a_rd_ci <- ifelse(nrow(trt_a_rd) > 0, sprintf('%.3f (%.3f, %.3f)', trt_a_rd$risk_diff, trt_a_rd$ci_lower, trt_a_rd$ci_upper), 'N/A')",
      "        trt_a_p <- ifelse(nrow(trt_a_rd) > 0, sprintf('%.4f', trt_a_rd$p_value), 'N/A')",
      "        ",
      "        trt_b_rd <- risk_diff_data %>% filter(TRT01P == 'Treatment B')",
      "        trt_b_rd_ci <- ifelse(nrow(trt_b_rd) > 0, sprintf('%.3f (%.3f, %.3f)', trt_b_rd$risk_diff, trt_b_rd$ci_lower, trt_b_rd$ci_upper), 'N/A')",
      "        trt_b_p <- ifelse(nrow(trt_b_rd) > 0, sprintf('%.4f', trt_b_rd$p_value), 'N/A')",
      "        ",
      "        # Safety alert",
      "        safety_alert <- case_when(",
      "          any(risk_diff_data$risk_diff > 0.1) ~ 'High',",
      "          any(risk_diff_data$risk_diff > 0.05) ~ 'Medium',",
      "          TRUE ~ 'Low'",
      "        )",
      "        ",
      "        # Add to table data",
      "        row_data <- data.frame(",
      "          Parameter = param_label,",
      "          Threshold = threshold,",
      "          Shift_Category = shift,",
      "          Treatment_A = trt_a_rate,",
      "          Treatment_B = trt_b_rate,",
      "          Placebo = placebo_rate,",
      "          Treatment_A_vs_Placebo = trt_a_rd_ci,",
      "          Treatment_B_vs_Placebo = trt_b_rd_ci,",
      "          Safety_Alert = safety_alert",
      "        )",
      "        ",
      "        table_data <- rbind(table_data, row_data)",
      "      }",
      "    }",
      "  }",
      "  ",
      "  return(table_data)",
      "}",
      "",
      "# Parameter information",
      "param_info <- list(",
      "  SYSBP = list(",
      "    label = 'Systolic Blood Pressure',",
      "    threshold = '≥20 mmHg increase or ≥20 mmHg decrease'",
      "  ),",
      "  DIABP = list(",
      "    label = 'Diastolic Blood Pressure',",
      "    threshold = '≥10 mmHg increase or ≥10 mmHg decrease'",
      "  ),",
      "  PULSE = list(",
      "    label = 'Heart Rate',",
      "    threshold = '≥20 bpm increase or ≥20 bpm decrease'",
      "  ),",
      "  TEMP = list(",
      "    label = 'Temperature',",
      "    threshold = '≥1°C increase or ≥1°C decrease'",
      "  ),",
      "  RESP = list(",
      "    label = 'Respiratory Rate',",
      "    threshold = '≥5 breaths/min increase or ≥5 breaths/min decrease'",
      "  ),",
      "  WEIGHT = list(",
      "    label = 'Weight',",
      "    threshold = '≥5% increase or ≥5% decrease'",
      "  )",
      ")",
      "",
      "# Generate table",
      "vital_shifts_table_data <- create_vital_shifts_table(vital_shift_results, vital_risk_diff_results, param_info)",
      "",
      "# Create formatted table",
      "vital_shifts_table <- vital_shifts_table_data %>%",
      "  gt() %>%",
      "  tab_header(",
      "    title = 'Table 14.3.6 Vital Signs Shifts Analysis',",
      "    subtitle = 'Clinically Significant Vital Signs Changes by Treatment Group'",
      "  ) %>%",
      "  cols_label(",
      "    Parameter = 'Parameter',",
      "    Threshold = 'Threshold',",
      "    Shift_Category = 'Shift Category',",
      "    Treatment_A = 'Treatment A<br>n/N (%)',",
      "    Treatment_B = 'Treatment B<br>n/N (%)',",
      "    Placebo = 'Placebo<br>n/N (%)',",
      "    Treatment_A_vs_Placebo = 'Treatment A vs Placebo<br>Risk Difference (95% CI)',",
      "    Treatment_B_vs_Placebo = 'Treatment B vs Placebo<br>Risk Difference (95% CI)',",
      "    Safety_Alert = 'Safety Alert'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(2)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(2, 4, 6, 8, 10, 12)",
      "    )",
      "  ) %>%",
      "  fmt_markdown(columns = everything()) %>%",
      "  tab_footnote(",
      "    footnote = 'Safety Population: All randomized subjects who received at least one dose of study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Clinically Significant: Changes meeting or exceeding clinical thresholds',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Risk Difference: Difference in shift rates between treatment groups',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Safety Alert: Level of clinical concern based on shift frequency and magnitude',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display table",
      "vital_shifts_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "data_validation <- shift_data_final %>%",
      "  group_by(PARAMCD, TRT01P) %>%",
      "  summarise(",
      "    n_subjects = n_distinct(USUBJID),",
      "    missing_baseline = sum(is.na(BASELINE_AVAL)),",
      "    missing_post = sum(is.na(POST_AVAL)),",
      "    missing_rate = (missing_baseline + missing_post) / (n_subjects * 2),",
      "    .groups = 'drop'",
      "  ) %>%",
      "  filter(missing_rate > 0.1)",
      "",
      "# Statistical validation",
      "statistical_validation <- list()",
      "for (param in vital_params) {",
      "  shift_table <- vital_shift_results[[param]]",
      "  ",
      "  # Check for sufficient sample sizes",
      "  sample_sizes <- shift_table %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(",
      "      total_n = first(total_n),",
      "      min_cell_count = min(n_shifts),",
      "      .groups = 'drop'",
      "    )",
      "  ",
      "  # Check for expected cell counts (for chi-square test)",
      "  expected_counts <- shift_table %>%",
      "    group_by(SHIFT_CATEGORY) %>%",
      "    summarise(",
      "      total_shift = sum(n_shifts),",
      "      .groups = 'drop'",
      "    ) %>%",
      "    mutate(",
      "      expected_count = total_shift / 3,  # Assuming 3 treatment groups",
      "      chi_square_valid = expected_count >= 5",
      "    )",
      "  ",
      "  statistical_validation[[param]] <- list(",
      "    sample_sizes = sample_sizes,",
      "    expected_counts = expected_counts,",
      "    chi_square_valid = all(expected_counts$chi_square_valid)",
      "  )",
      "}",
      "",
      "# Clinical validation",
      "clinical_validation <- list()",
      "for (param in vital_params) {",
      "  risk_diffs <- vital_risk_diff_results[[param]]",
      "  ",
      "  # Check for clinically significant shifts",
      "  clinically_significant_shifts <- risk_diffs %>%",
      "    filter(abs(risk_diff) >= 0.05) %>%",
      "    nrow()",
      "  ",
      "  # Check for safety alerts",
      "  safety_alerts <- risk_diffs %>%",
      "    filter(risk_diff > 0.1) %>%",
      "    nrow()",
      "  ",
      "  clinical_validation[[param]] <- list(",
      "    clinically_significant_count = clinically_significant_shifts,",
      "    safety_alert_count = safety_alerts,",
      "    clinical_threshold = clinical_thresholds[[param]]",
      "  )",
      "}",
      "",
      "# Threshold monitoring validation",
      "threshold_validation <- list()",
      "for (param in vital_params) {",
      "  param_data <- analysis_data %>% filter(PARAMCD == param)",
      "  ",
      "  # Check threshold compliance",
      "  threshold_compliance <- param_data %>%",
      "    group_by(TRT01P, AVISIT) %>%",
      "    summarise(",
      "      n_total = n(),",
      "      n_within_threshold = sum(AVAL >= reference_ranges[[param]]$low & AVAL <= reference_ranges[[param]]$high, na.rm = TRUE),",
      "      compliance_rate = n_within_threshold / n_total * 100,",
      "      .groups = 'drop'",
      "    )",
      "  ",
      "  # Check for extreme values",
      "  extreme_values <- param_data %>%",
      "    filter(",
      "      AVAL < reference_ranges[[param]]$low * 0.8 |",
      "      AVAL > reference_ranges[[param]]$high * 1.2",
      "    ) %>%",
      "    nrow()",
      "  ",
      "  threshold_validation[[param]] <- list(",
      "    compliance = threshold_compliance,",
      "    extreme_values = extreme_values",
      "  )",
      "}",
      "",
      "# Print validation results",
      "cat('Data Validation:\\n')",
      "print(data_validation)",
      "cat('\\nStatistical Validation:\\n')",
      "print(statistical_validation)",
      "cat('\\nClinical Validation:\\n')",
      "print(clinical_validation)",
      "cat('\\nThreshold Validation:\\n')",
      "print(threshold_validation)"
    ],
    "export_functions": [
      "# Export vital signs shifts analysis results",
      "export_vital_shifts_results <- function(table_data, shift_results, risk_diff_results, output_dir = 'output') {",
      "  # Create output directory",
      "  if (!dir.exists(output_dir)) {",
      "    dir.create(output_dir, recursive = TRUE)",
      "  }",
      "  ",
      "  # Export HTML table",
      "  html_file <- file.path(output_dir, 'vital_shifts_table.html')",
      "  vital_shifts_table %>%",
      "    gtsave(html_file)",
      "  ",
      "  # Export RTF table",
      "  rtf_file <- file.path(output_dir, 'vital_shifts_table.rtf')",
      "  vital_shifts_table_data %>%",
      "    flextable() %>%",
      "    set_header_labels(",
      "      Parameter = 'Parameter',",
      "      Threshold = 'Threshold',",
      "      Shift_Category = 'Shift Category',",
      "      Treatment_A = 'Treatment A\\nn/N (%)',",
      "      Treatment_B = 'Treatment B\\nn/N (%)',",
      "      Placebo = 'Placebo\\nn/N (%)',",
      "      Treatment_A_vs_Placebo = 'Treatment A vs Placebo\\nRisk Difference (95% CI)',",
      "      Treatment_B_vs_Placebo = 'Treatment B vs Placebo\\nRisk Difference (95% CI)',",
      "      Safety_Alert = 'Safety Alert'",
      "    ) %>%",
      "    autofit() %>%",
      "    save_as_rtf(rtf_file)",
      "  ",
      "  # Export results summary",
      "  summary_file <- file.path(output_dir, 'vital_shifts_summary.txt')",
      "  sink(summary_file)",
      "  cat('Vital Signs Shifts Analysis Summary\\n')",
      "  cat('==================================\\n\\n')",
      "  ",
      "  for (param in names(shift_results)) {",
      "    cat(sprintf('Parameter: %s\\n', param))",
      "    ",
      "    # Print shift table summary",
      "    shift_summary <- shift_results[[param]] %>%",
      "      group_by(TRT01P) %>%",
      "      summarise(",
      "        total_subjects = first(total_n),",
      "        total_shifts = sum(n_shifts),",
      "        .groups = 'drop'",
      "      )",
      "    print(shift_summary)",
      "    ",
      "    # Print risk differences",
      "    if (nrow(risk_diff_results[[param]]) > 0) {",
      "      cat('Risk Differences:\\n')",
      "      print(risk_diff_results[[param]])",
      "    }",
      "    ",
      "    cat('\\n')",
      "  }",
      "  ",
      "  cat('Statistical Method: Shift Table Analysis\\n')",
      "  cat('Population: Safety Population\\n')",
      "  cat('Significance Level: 0.05\\n')",
      "  cat('Clinical Significance: Changes meeting or exceeding clinical thresholds\\n')",
      "  cat('Safety Alert: Level of clinical concern based on shift frequency and magnitude\\n')",
      "  sink()",
      "  ",
      "  cat('Exported files to:', output_dir, '\\n')",
      "}",
      "",
      "# Export results",
      "export_vital_shifts_results(vital_shifts_table_data, vital_shift_results, vital_risk_diff_results)"
    ]
  },
  "keywords": [
    "vital signs shifts",
    "shift table analysis",
    "blood pressure",
    "heart rate",
    "temperature",
    "respiratory rate",
    "weight",
    "clinical significance",
    "safety monitoring",
    "threshold monitoring",
    "FDA compliance",
    "ICH E3",
    "clinical trial",
    "statistical analysis"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant vital signs shifts analysis template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.3.6",
      "FDA Guidance for Industry: E3 Structure and Content of Clinical Study Reports",
      "CDISC ADaM Implementation Guide",
      "Vital Signs Safety Monitoring Guidelines",
      "Statistical Analysis Plan Template"
    ],
    "data_requirements": [
      "ADSL dataset with SAFFL flag",
      "ADVS dataset with vital signs variables",
      "Vital signs variables: SYSBP, DIABP, PULSE, TEMP, RESP, WEIGHT",
      "Visit information: AVISIT (Baseline, Week 12)",
      "Treatment assignment: TRT01P",
      "Reference ranges and clinical thresholds"
    ],
    "statistical_methods": [
      "Shift table analysis for vital signs transitions",
      "Risk differences with 95% confidence intervals",
      "Chi-square test or Fisher's exact test for significance",
      "Clinical significance assessment using pre-specified thresholds",
      "Safety alert classification based on shift frequency and magnitude"
    ]
  }
} 