{
  "id": "fda-subgroup-analysis-detailed-001",
  "title": "Table 14.3.1 Subgroup Analyses",
  "type": "table",
  "category": "specialized_analyses",
  "fda_compliance": {
    "standard": "ICH E3 Section 14.3.1",
    "population": "Intent-to-Treat (ITT)",
    "statistical_method": "Interaction Testing",
    "quality_checks": ["data_validation", "statistical_review", "clinical_review", "multiplicity_control"],
    "regulatory_requirements": [
      "FDA Guidance for Industry: E9 Statistical Principles for Clinical Trials",
      "ICH E3 Guidelines Section 14.3",
      "CDISC ADaM Implementation Guide",
      "Subgroup Analysis Guidelines"
    ]
  },
  "template_structure": {
    "title": "Table 14.3.1 Subgroup Analyses",
    "subtitle": "Primary Efficacy Endpoint by Pre-specified Subgroups",
    "table_type": "subgroup_analysis",
    "columns": [
      {
        "name": "Subgroup",
        "type": "text",
        "description": "Pre-specified subgroup category"
      },
      {
        "name": "Category",
        "type": "text",
        "description": "Subgroup category level"
      },
      {
        "name": "Treatment A",
        "type": "statistical",
        "description": "n/N (%) or Mean (SD) for Treatment A",
        "statistics": ["count", "total", "percentage", "mean", "sd"]
      },
      {
        "name": "Treatment B",
        "type": "statistical",
        "description": "n/N (%) or Mean (SD) for Treatment B",
        "statistics": ["count", "total", "percentage", "mean", "sd"]
      },
      {
        "name": "Placebo",
        "type": "statistical",
        "description": "n/N (%) or Mean (SD) for Placebo",
        "statistics": ["count", "total", "percentage", "mean", "sd"]
      },
      {
        "name": "Treatment A vs Placebo",
        "type": "comparison",
        "description": "Difference (95% CI) or p-value",
        "statistics": ["difference", "ci_lower", "ci_upper", "p_value"]
      },
      {
        "name": "Treatment B vs Placebo",
        "type": "comparison",
        "description": "Difference (95% CI) or p-value",
        "statistics": ["difference", "ci_lower", "ci_upper", "p_value"]
      },
      {
        "name": "Interaction p-value",
        "type": "statistical",
        "description": "Treatment-by-subgroup interaction",
        "statistics": ["p_value"]
      },
      {
        "name": "Clinical Relevance",
        "type": "text",
        "description": "Clinical significance assessment"
      }
    ],
    "rows": [
      {
        "category": "Age Groups",
        "subgroups": [
          {
            "name": "Age < 65 years",
            "paramcd": "AGE_UNDER_65",
            "category": "Age Groups",
            "subgroup_var": "AGE_GROUP",
            "subgroup_value": "<65",
            "baseline_var": "AGE",
            "clinical_threshold": "Age-related response differences"
          },
          {
            "name": "Age 65-75 years",
            "paramcd": "AGE_65_75",
            "category": "Age Groups",
            "subgroup_var": "AGE_GROUP",
            "subgroup_value": "65-75",
            "baseline_var": "AGE",
            "clinical_threshold": "Age-related response differences"
          },
          {
            "name": "Age > 75 years",
            "paramcd": "AGE_OVER_75",
            "category": "Age Groups",
            "subgroup_var": "AGE_GROUP",
            "subgroup_value": ">75",
            "baseline_var": "AGE",
            "clinical_threshold": "Age-related response differences"
          }
        ]
      },
      {
        "category": "Sex",
        "subgroups": [
          {
            "name": "Male",
            "paramcd": "SEX_MALE",
            "category": "Sex",
            "subgroup_var": "SEX",
            "subgroup_value": "M",
            "baseline_var": "SEX",
            "clinical_threshold": "Sex-specific treatment effects"
          },
          {
            "name": "Female",
            "paramcd": "SEX_FEMALE",
            "category": "Sex",
            "subgroup_var": "SEX",
            "subgroup_value": "F",
            "baseline_var": "SEX",
            "clinical_threshold": "Sex-specific treatment effects"
          }
        ]
      },
      {
        "category": "Race",
        "subgroups": [
          {
            "name": "White",
            "paramcd": "RACE_WHITE",
            "category": "Race",
            "subgroup_var": "RACE",
            "subgroup_value": "WHITE",
            "baseline_var": "RACE",
            "clinical_threshold": "Race-specific treatment effects"
          },
          {
            "name": "Black or African American",
            "paramcd": "RACE_BLACK",
            "category": "Race",
            "subgroup_var": "RACE",
            "subgroup_value": "BLACK",
            "baseline_var": "RACE",
            "clinical_threshold": "Race-specific treatment effects"
          },
          {
            "name": "Asian",
            "paramcd": "RACE_ASIAN",
            "category": "Race",
            "subgroup_var": "RACE",
            "subgroup_value": "ASIAN",
            "baseline_var": "RACE",
            "clinical_threshold": "Race-specific treatment effects"
          },
          {
            "name": "Other",
            "paramcd": "RACE_OTHER",
            "category": "Race",
            "subgroup_var": "RACE",
            "subgroup_value": "OTHER",
            "baseline_var": "RACE",
            "clinical_threshold": "Race-specific treatment effects"
          }
        ]
      },
      {
        "category": "Disease Severity",
        "subgroups": [
          {
            "name": "Mild (MMSE 20-26)",
            "paramcd": "SEVERITY_MILD",
            "category": "Disease Severity",
            "subgroup_var": "DISEASE_SEVERITY",
            "subgroup_value": "MILD",
            "baseline_var": "BASE_MMSE",
            "clinical_threshold": "Severity-dependent response"
          },
          {
            "name": "Moderate (MMSE 10-19)",
            "paramcd": "SEVERITY_MODERATE",
            "category": "Disease Severity",
            "subgroup_var": "DISEASE_SEVERITY",
            "subgroup_value": "MODERATE",
            "baseline_var": "BASE_MMSE",
            "clinical_threshold": "Severity-dependent response"
          },
          {
            "name": "Severe (MMSE < 10)",
            "paramcd": "SEVERITY_SEVERE",
            "category": "Disease Severity",
            "subgroup_var": "DISEASE_SEVERITY",
            "subgroup_value": "SEVERE",
            "baseline_var": "BASE_MMSE",
            "clinical_threshold": "Severity-dependent response"
          }
        ]
      },
      {
        "category": "APOE4 Status",
        "subgroups": [
          {
            "name": "APOE4 Carrier",
            "paramcd": "APOE4_CARRIER",
            "category": "APOE4 Status",
            "subgroup_var": "APOE4_STATUS",
            "subgroup_value": "CARRIER",
            "baseline_var": "BASE_APOE4",
            "clinical_threshold": "Genetic marker response"
          },
          {
            "name": "APOE4 Non-carrier",
            "paramcd": "APOE4_NONCARRIER",
            "category": "APOE4 Status",
            "subgroup_var": "APOE4_STATUS",
            "subgroup_value": "NONCARRIER",
            "baseline_var": "BASE_APOE4",
            "clinical_threshold": "Genetic marker response"
          }
        ]
      },
      {
        "category": "Concomitant Medications",
        "subgroups": [
          {
            "name": "Cholinesterase Inhibitors",
            "paramcd": "CONCOMITANT_CHOLINESTERASE",
            "category": "Concomitant Medications",
            "subgroup_var": "CONCOMITANT_MED",
            "subgroup_value": "CHOLINESTERASE",
            "baseline_var": "BASE_CHOLINESTERASE",
            "clinical_threshold": "Drug interaction effects"
          },
          {
            "name": "Memantine",
            "paramcd": "CONCOMITANT_MEMANTINE",
            "category": "Concomitant Medications",
            "subgroup_var": "CONCOMITANT_MED",
            "subgroup_value": "MEMANTINE",
            "baseline_var": "BASE_MEMANTINE",
            "clinical_threshold": "Drug interaction effects"
          },
          {
            "name": "No Concomitant AD Medication",
            "paramcd": "CONCOMITANT_NONE",
            "category": "Concomitant Medications",
            "subgroup_var": "CONCOMITANT_MED",
            "subgroup_value": "NONE",
            "baseline_var": "BASE_AD_MED",
            "clinical_threshold": "Drug interaction effects"
          }
        ]
      },
      {
        "category": "Geographic Region",
        "subgroups": [
          {
            "name": "North America",
            "paramcd": "REGION_NA",
            "category": "Geographic Region",
            "subgroup_var": "REGION",
            "subgroup_value": "NORTH_AMERICA",
            "baseline_var": "REGION",
            "clinical_threshold": "Regional treatment differences"
          },
          {
            "name": "Europe",
            "paramcd": "REGION_EUROPE",
            "category": "Geographic Region",
            "subgroup_var": "REGION",
            "subgroup_value": "EUROPE",
            "baseline_var": "REGION",
            "clinical_threshold": "Regional treatment differences"
          },
          {
            "name": "Asia Pacific",
            "paramcd": "REGION_ASIA",
            "category": "Geographic Region",
            "subgroup_var": "REGION",
            "subgroup_value": "ASIA_PACIFIC",
            "baseline_var": "REGION",
            "clinical_threshold": "Regional treatment differences"
          }
        ]
      }
    ],
    "footnotes": [
      "ITT Population: All randomized subjects who received at least one dose of study drug",
      "Subgroups: Pre-specified subgroups based on baseline characteristics",
      "Interaction testing: Treatment-by-subgroup interaction p-values",
      "Clinical relevance: Assessment of subgroup-specific treatment effects",
      "Multiplicity control: Hochberg procedure for multiple subgroup testing",
      "95% CI: 95% confidence interval for treatment differences",
      "p-values: Statistical significance testing for subgroup analyses",
      "Treatment A: High dose, Treatment B: Low dose"
    ],
    "statistical_methodology": {
      "primary_method": "Interaction Testing",
      "subgroup_analysis": "Pre-specified subgroups with interaction testing",
      "multiplicity_control": "Hochberg procedure for multiple testing",
      "clinical_significance": "Pre-specified thresholds for subgroup effects",
      "interaction_testing": "Treatment-by-subgroup interaction models",
      "confidence_intervals": "95% confidence intervals for subgroup differences",
      "significance_level": 0.05,
      "confidence_level": 0.95
    }
  },
  "r_code": {
    "libraries": [
      "library(tidyverse)",
      "library(haven)",
      "library(lubridate)",
      "library(gt)",
      "library(flextable)",
      "library(lme4)",
      "library(emmeans)",
      "library(multcomp)"
    ],
    "data_preparation": [
      "# Load datasets",
      "adsl <- read_sas('data/adsl.sas7bdat')",
      "adqs <- read_sas('data/adqs.sas7bdat')",
      "",
      "# Filter for ITT population",
      "adsl_itt <- adsl %>% filter(ITTFL == 'Y')",
      "",
      "# Merge datasets",
      "analysis_data <- adqs %>%",
      "  inner_join(adsl_itt, by = 'USUBJID') %>%",
      "  filter(PARAMCD == 'ADASCOG' & AVISIT == 'Week 26') %>%",
      "  mutate(",
      "    TRT01P = factor(TRT01P, levels = c('Placebo', 'Treatment B', 'Treatment A')),",
      "    # Create subgroup variables",
      "    AGE_GROUP = case_when(",
      "      AGE < 65 ~ '<65',",
      "      AGE >= 65 & AGE <= 75 ~ '65-75',",
      "      AGE > 75 ~ '>75'",
      "    ),",
      "    DISEASE_SEVERITY = case_when(",
      "      BASE_MMSE >= 20 ~ 'MILD',",
      "      BASE_MMSE >= 10 & BASE_MMSE < 20 ~ 'MODERATE',",
      "      BASE_MMSE < 10 ~ 'SEVERE'",
      "    ),",
      "    APOE4_STATUS = ifelse(BASE_APOE4 == 'Y', 'CARRIER', 'NONCARRIER'),",
      "    CONCOMITANT_MED = case_when(",
      "      BASE_CHOLINESTERASE == 'Y' ~ 'CHOLINESTERASE',",
      "      BASE_MEMANTINE == 'Y' ~ 'MEMANTINE',",
      "      BASE_AD_MED == 'N' ~ 'NONE'",
      "    ),",
      "    REGION = case_when(",
      "      str_detect(COUNTRY, 'US|CAN') ~ 'NORTH_AMERICA',",
      "      str_detect(COUNTRY, 'GBR|FRA|DEU|ITA|ESP') ~ 'EUROPE',",
      "      str_detect(COUNTRY, 'JPN|KOR|CHN|AUS') ~ 'ASIA_PACIFIC'",
      "    )",
      "  )",
      "",
      "# Define subgroup parameters",
      "subgroup_parameters <- list(",
      "  AGE_UNDER_65 = list(",
      "    label = 'Age < 65 years',",
      "    category = 'Age Groups',",
      "    subgroup_var = 'AGE_GROUP',",
      "    subgroup_value = '<65',",
      "    clinical_threshold = 'Age-related response differences'",
      "  ),",
      "  AGE_65_75 = list(",
      "    label = 'Age 65-75 years',",
      "    category = 'Age Groups',",
      "    subgroup_var = 'AGE_GROUP',",
      "    subgroup_value = '65-75',",
      "    clinical_threshold = 'Age-related response differences'",
      "  ),",
      "  AGE_OVER_75 = list(",
      "    label = 'Age > 75 years',",
      "    category = 'Age Groups',",
      "    subgroup_var = 'AGE_GROUP',",
      "    subgroup_value = '>75',",
      "    clinical_threshold = 'Age-related response differences'",
      "  ),",
      "  SEX_MALE = list(",
      "    label = 'Male',",
      "    category = 'Sex',",
      "    subgroup_var = 'SEX',",
      "    subgroup_value = 'M',",
      "    clinical_threshold = 'Sex-specific treatment effects'",
      "  ),",
      "  SEX_FEMALE = list(",
      "    label = 'Female',",
      "    category = 'Sex',",
      "    subgroup_var = 'SEX',",
      "    subgroup_value = 'F',",
      "    clinical_threshold = 'Sex-specific treatment effects'",
      "  ),",
      "  RACE_WHITE = list(",
      "    label = 'White',",
      "    category = 'Race',",
      "    subgroup_var = 'RACE',",
      "    subgroup_value = 'WHITE',",
      "    clinical_threshold = 'Race-specific treatment effects'",
      "  ),",
      "  RACE_BLACK = list(",
      "    label = 'Black or African American',",
      "    category = 'Race',",
      "    subgroup_var = 'RACE',",
      "    subgroup_value = 'BLACK',",
      "    clinical_threshold = 'Race-specific treatment effects'",
      "  ),",
      "  RACE_ASIAN = list(",
      "    label = 'Asian',",
      "    category = 'Race',",
      "    subgroup_var = 'RACE',",
      "    subgroup_value = 'ASIAN',",
      "    clinical_threshold = 'Race-specific treatment effects'",
      "  ),",
      "  RACE_OTHER = list(",
      "    label = 'Other',",
      "    category = 'Race',",
      "    subgroup_var = 'RACE',",
      "    subgroup_value = 'OTHER',",
      "    clinical_threshold = 'Race-specific treatment effects'",
      "  ),",
      "  SEVERITY_MILD = list(",
      "    label = 'Mild (MMSE 20-26)',",
      "    category = 'Disease Severity',",
      "    subgroup_var = 'DISEASE_SEVERITY',",
      "    subgroup_value = 'MILD',",
      "    clinical_threshold = 'Severity-dependent response'",
      "  ),",
      "  SEVERITY_MODERATE = list(",
      "    label = 'Moderate (MMSE 10-19)',",
      "    category = 'Disease Severity',",
      "    subgroup_var = 'DISEASE_SEVERITY',",
      "    subgroup_value = 'MODERATE',",
      "    clinical_threshold = 'Severity-dependent response'",
      "  ),",
      "  SEVERITY_SEVERE = list(",
      "    label = 'Severe (MMSE < 10)',",
      "    category = 'Disease Severity',",
      "    subgroup_var = 'DISEASE_SEVERITY',",
      "    subgroup_value = 'SEVERE',",
      "    clinical_threshold = 'Severity-dependent response'",
      "  ),",
      "  APOE4_CARRIER = list(",
      "    label = 'APOE4 Carrier',",
      "    category = 'APOE4 Status',",
      "    subgroup_var = 'APOE4_STATUS',",
      "    subgroup_value = 'CARRIER',",
      "    clinical_threshold = 'Genetic marker response'",
      "  ),",
      "  APOE4_NONCARRIER = list(",
      "    label = 'APOE4 Non-carrier',",
      "    category = 'APOE4 Status',",
      "    subgroup_var = 'APOE4_STATUS',",
      "    subgroup_value = 'NONCARRIER',",
      "    clinical_threshold = 'Genetic marker response'",
      "  ),",
      "  CONCOMITANT_CHOLINESTERASE = list(",
      "    label = 'Cholinesterase Inhibitors',",
      "    category = 'Concomitant Medications',",
      "    subgroup_var = 'CONCOMITANT_MED',",
      "    subgroup_value = 'CHOLINESTERASE',",
      "    clinical_threshold = 'Drug interaction effects'",
      "  ),",
      "  CONCOMITANT_MEMANTINE = list(",
      "    label = 'Memantine',",
      "    category = 'Concomitant Medications',",
      "    subgroup_var = 'CONCOMITANT_MED',",
      "    subgroup_value = 'MEMANTINE',",
      "    clinical_threshold = 'Drug interaction effects'",
      "  ),",
      "  CONCOMITANT_NONE = list(",
      "    label = 'No Concomitant AD Medication',",
      "    category = 'Concomitant Medications',",
      "    subgroup_var = 'CONCOMITANT_MED',",
      "    subgroup_value = 'NONE',",
      "    clinical_threshold = 'Drug interaction effects'",
      "  ),",
      "  REGION_NA = list(",
      "    label = 'North America',",
      "    category = 'Geographic Region',",
      "    subgroup_var = 'REGION',",
      "    subgroup_value = 'NORTH_AMERICA',",
      "    clinical_threshold = 'Regional treatment differences'",
      "  ),",
      "  REGION_EUROPE = list(",
      "    label = 'Europe',",
      "    category = 'Geographic Region',",
      "    subgroup_var = 'REGION',",
      "    subgroup_value = 'EUROPE',",
      "    clinical_threshold = 'Regional treatment differences'",
      "  ),",
      "  REGION_ASIA = list(",
      "    label = 'Asia Pacific',",
      "    category = 'Geographic Region',",
      "    subgroup_var = 'REGION',",
      "    subgroup_value = 'ASIA_PACIFIC',",
      "    clinical_threshold = 'Regional treatment differences'",
      "  )",
      ")"
    ],
    "statistical_analysis": [
      "# Function to analyze subgroup data",
      "analyze_subgroup <- function(data, param_code) {",
      "  param_info <- subgroup_parameters[[param_code]]",
      "  subgroup_var <- param_info$subgroup_var",
      "  subgroup_value <- param_info$subgroup_value",
      "  ",
      "  # Filter data for specific subgroup",
      "  subgroup_data <- data %>%",
      "    filter(!!sym(subgroup_var) == subgroup_value) %>%",
      "    filter(!is.na(CHG))",
      "  ",
      "  # Calculate summary statistics by treatment group",
      "  summary_stats <- subgroup_data %>%",
      "    group_by(TRT01P) %>%",
      "    summarise(",
      "      n = n(),",
      "      mean_chg = mean(CHG, na.rm = TRUE),",
      "      sd_chg = sd(CHG, na.rm = TRUE),",
      "      .groups = 'drop'",
      "    )",
      "  ",
      "  # Calculate treatment differences",
      "  placebo_mean <- summary_stats %>% filter(TRT01P == 'Placebo') %>% pull(mean_chg)",
      "  ",
      "  treatment_diffs <- summary_stats %>%",
      "    filter(TRT01P != 'Placebo') %>%",
      "    mutate(",
      "      difference = mean_chg - placebo_mean,",
      "      # Simple CI calculation",
      "      pooled_sd = sqrt((sd_chg^2 + (summary_stats %>% filter(TRT01P == 'Placebo') %>% pull(sd_chg))^2) / 2),",
      "      se_diff = pooled_sd * sqrt(1/n + 1/(summary_stats %>% filter(TRT01P == 'Placebo') %>% pull(n))),",
      "      ci_lower = difference - 1.96 * se_diff,",
      "      ci_upper = difference + 1.96 * se_diff,",
      "      # t-test p-value",
      "      t_stat = difference / se_diff,",
      "      p_value = 2 * pt(-abs(t_stat), df = n + (summary_stats %>% filter(TRT01P == 'Placebo') %>% pull(n)) - 2)",
      "    )",
      "  ",
      "  return(list(",
      "    summary = summary_stats,",
      "    differences = treatment_diffs",
      "  ))",
      "}",
      "",
      "# Function to test treatment-by-subgroup interaction",
      "test_subgroup_interaction <- function(data, param_code) {",
      "  param_info <- subgroup_parameters[[param_code]]",
      "  subgroup_var <- param_info$subgroup_var",
      "  ",
      "  # Create interaction model",
      "  interaction_formula <- paste('CHG ~ TRT01P *', subgroup_var)",
      "  ",
      "  # Fit linear model with interaction",
      "  interaction_model <- lm(as.formula(interaction_formula), data = data)",
      "  ",
      "  # Extract interaction p-value",
      "  model_summary <- summary(interaction_model)",
      "  ",
      "  # Find interaction terms",
      "  interaction_terms <- grep('TRT01P.*:', rownames(model_summary$coefficients), value = TRUE)",
      "  ",
      "  if (length(interaction_terms) > 0) {",
      "    # Get the most significant interaction p-value",
      "    interaction_p_values <- model_summary$coefficients[interaction_terms, 'Pr(>|t|)']",
      "    interaction_p_value <- min(interaction_p_values)",
      "  } else {",
      "    interaction_p_value <- NA",
      "  }",
      "  ",
      "  return(interaction_p_value)",
      "}",
      "",
      "# Analyze all subgroups",
      "subgroup_results <- list()",
      "for (param in names(subgroup_parameters)) {",
      "  subgroup_results[[param]] <- analyze_subgroup(analysis_data, param)",
      "}",
      "",
      "# Test interactions for all subgroups",
      "interaction_results <- list()",
      "for (param in names(subgroup_parameters)) {",
      "  interaction_results[[param]] <- test_subgroup_interaction(analysis_data, param)",
      "}",
      "",
      "# Apply multiplicity control (Hochberg procedure)",
      "apply_hochberg_correction <- function(p_values) {",
      "  # Sort p-values in descending order",
      "  sorted_p <- sort(p_values, decreasing = TRUE)",
      "  n_tests <- length(sorted_p)",
      "  ",
      "  # Apply Hochberg procedure",
      "  adjusted_p <- numeric(n_tests)",
      "  for (i in 1:n_tests) {",
      "    adjusted_p[i] <- sorted_p[i] * (n_tests - i + 1)",
      "  }",
      "  ",
      "  # Ensure adjusted p-values are not greater than 1",
      "  adjusted_p <- pmin(adjusted_p, 1)",
      "  ",
      "  # Return to original order",
      "  names(adjusted_p) <- names(sorted_p)",
      "  return(adjusted_p)",
      "}",
      "",
      "# Apply multiplicity correction to interaction p-values",
      "interaction_p_values <- unlist(interaction_results)",
      "adjusted_interaction_p_values <- apply_hochberg_correction(interaction_p_values)"
    ],
    "table_generation": [
      "# Function to create subgroup analysis summary table",
      "create_subgroup_table <- function(results, interaction_results, adjusted_p_values, param_info) {",
      "  table_data <- data.frame()",
      "  ",
      "  for (param in names(results)) {",
      "    result <- results[[param]]",
      "    info <- param_info[[param]]",
      "    interaction_p <- adjusted_p_values[param]",
      "    ",
      "    # Get treatment group summaries",
      "    trt_a <- result$summary %>% filter(TRT01P == 'Treatment A')",
      "    trt_a_summary <- sprintf('%.2f (%.2f)', trt_a$mean_chg, trt_a$sd_chg)",
      "    ",
      "    trt_b <- result$summary %>% filter(TRT01P == 'Treatment B')",
      "    trt_b_summary <- sprintf('%.2f (%.2f)', trt_b$mean_chg, trt_b$sd_chg)",
      "    ",
      "    placebo <- result$summary %>% filter(TRT01P == 'Placebo')",
      "    placebo_summary <- sprintf('%.2f (%.2f)', placebo$mean_chg, placebo$sd_chg)",
      "    ",
      "    # Treatment differences",
      "    trt_a_diff <- result$differences %>% filter(TRT01P == 'Treatment A')",
      "    trt_a_diff_ci <- sprintf('%.3f (%.3f, %.3f)', trt_a_diff$difference, trt_a_diff$ci_lower, trt_a_diff$ci_upper)",
      "    trt_a_p <- sprintf('%.4f', trt_a_diff$p_value)",
      "    ",
      "    trt_b_diff <- result$differences %>% filter(TRT01P == 'Treatment B')",
      "    trt_b_diff_ci <- sprintf('%.3f (%.3f, %.3f)', trt_b_diff$difference, trt_b_diff$ci_lower, trt_b_diff$ci_upper)",
      "    trt_b_p <- sprintf('%.4f', trt_b_diff$p_value)",
      "    ",
      "    # Interaction p-value",
      "    interaction_p_str <- sprintf('%.4f', interaction_p)",
      "    ",
      "    # Clinical relevance assessment",
      "    clinical_relevance <- case_when(",
      "      interaction_p < 0.001 ~ 'Highly Significant Interaction',",
      "      interaction_p < 0.01 ~ 'Significant Interaction',",
      "      interaction_p < 0.05 ~ 'Marginally Significant Interaction',",
      "      TRUE ~ 'No Significant Interaction'",
      "    )",
      "    ",
      "    # Add to table data",
      "    row_data <- data.frame(",
      "      Subgroup = info$label,",
      "      Category = info$category,",
      "      Treatment_A = trt_a_summary,",
      "      Treatment_B = trt_b_summary,",
      "      Placebo = placebo_summary,",
      "      Treatment_A_vs_Placebo = trt_a_diff_ci,",
      "      Treatment_B_vs_Placebo = trt_b_diff_ci,",
      "      Interaction_p_value = interaction_p_str,",
      "      Clinical_Relevance = clinical_relevance",
      "    )",
      "    ",
      "    table_data <- rbind(table_data, row_data)",
      "  }",
      "  ",
      "  return(table_data)",
      "}",
      "",
      "# Generate table",
      "subgroup_table_data <- create_subgroup_table(subgroup_results, interaction_results, adjusted_interaction_p_values, subgroup_parameters)",
      "",
      "# Create formatted table",
      "subgroup_analysis_table <- subgroup_table_data %>%",
      "  gt() %>%",
      "  tab_header(",
      "    title = 'Table 14.3.1 Subgroup Analyses',",
      "    subtitle = 'Primary Efficacy Endpoint by Pre-specified Subgroups'",
      "  ) %>%",
      "  cols_label(",
      "    Subgroup = 'Subgroup',",
      "    Category = 'Category',",
      "    Treatment_A = 'Treatment A<br>Mean (SD)',",
      "    Treatment_B = 'Treatment B<br>Mean (SD)',",
      "    Placebo = 'Placebo<br>Mean (SD)',",
      "    Treatment_A_vs_Placebo = 'Treatment A vs Placebo<br>Difference (95% CI)',",
      "    Treatment_B_vs_Placebo = 'Treatment B vs Placebo<br>Difference (95% CI)',",
      "    Interaction_p_value = 'Interaction p-value',",
      "    Clinical_Relevance = 'Clinical Relevance'",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_text(weight = 'bold'),",
      "    locations = cells_column_labels()",
      "  ) %>%",
      "  tab_style(",
      "    style = cell_borders(",
      "      sides = 'bottom',",
      "      weight = px(2)",
      "    ),",
      "    locations = cells_body(",
      "      rows = c(3, 5, 9, 12, 14, 17, 20)",
      "    )",
      "  ) %>%",
      "  fmt_markdown(columns = everything()) %>%",
      "  tab_footnote(",
      "    footnote = 'ITT Population: All randomized subjects who received at least one dose of study drug',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Subgroups: Pre-specified subgroups based on baseline characteristics',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Interaction testing: Treatment-by-subgroup interaction p-values',",
      "    locations = cells_title()",
      "  ) %>%",
      "  tab_footnote(",
      "    footnote = 'Multiplicity control: Hochberg procedure for multiple subgroup testing',",
      "    locations = cells_title()",
      "  )",
      "",
      "# Display table",
      "subgroup_analysis_table"
    ],
    "quality_checks": [
      "# Data validation checks",
      "data_validation <- analysis_data %>%",
      "  group_by(TRT01P) %>%",
      "  summarise(",
      "    n_subjects = n_distinct(USUBJID),",
      "    n_observations = n(),",
      "    missing_chg = sum(is.na(CHG)),",
      "    chg_completeness = (n_observations - missing_chg) / n_observations * 100,",
      "    .groups = 'drop'",
      "  ) %>%",
      "  filter(chg_completeness < 80)",
      "",
      "# Subgroup sample size validation",
      "subgroup_sample_sizes <- analysis_data %>%",
      "  group_by(TRT01P, AGE_GROUP, SEX, RACE, DISEASE_SEVERITY, APOE4_STATUS, CONCOMITANT_MED, REGION) %>%",
      "  summarise(",
      "    n_subjects = n_distinct(USUBJID),",
      "    .groups = 'drop'",
      "  ) %>%",
      "  filter(n_subjects < 10)",
      "",
      "# Statistical validation",
      "statistical_validation <- list()",
      "for (param in names(subgroup_results)) {",
      "  result <- subgroup_results[[param]]",
      "  ",
      "  # Check for sufficient sample sizes",
      "  sample_sizes <- result$summary %>%",
      "    summarise(",
      "      min_n = min(n),",
      "      max_n = max(n),",
      "      .groups = 'drop'",
      "    )",
      "  ",
      "  # Check for valid differences",
      "  valid_differences <- result$differences %>%",
      "    summarise(",
      "      valid_ci = all(ci_lower < ci_upper, na.rm = TRUE),",
      "      valid_p = all(p_value >= 0 & p_value <= 1, na.rm = TRUE),",
      "      .groups = 'drop'",
      "    )",
      "  ",
      "  statistical_validation[[param]] <- list(",
      "    sample_sizes = sample_sizes,",
      "    valid_differences = valid_differences,",
      "    sufficient_sample = sample_sizes$min_n >= 10",
      "  )",
      "}",
      "",
      "# Clinical validation",
      "clinical_validation <- list()",
      "for (param in names(subgroup_results)) {",
      "  result <- subgroup_results[[param]]",
      "  interaction_p <- adjusted_interaction_p_values[param]",
      "  ",
      "  # Check for clinically significant differences",
      "  clinically_significant_diffs <- result$differences %>%",
      "    filter(abs(difference) >= 2) %>%  # 2-point difference threshold",
      "    nrow()",
      "  ",
      "  # Check for significant interactions",
      "  significant_interaction <- interaction_p < 0.05",
      "  ",
      "  clinical_validation[[param]] <- list(",
      "    clinically_significant_count = clinically_significant_diffs,",
      "    significant_interaction = significant_interaction,",
      "    interaction_p_value = interaction_p",
      "  )",
      "}",
      "",
      "# Multiplicity validation",
      "multiplicity_validation <- list(",
      "  total_tests = length(adjusted_interaction_p_values),",
      "  significant_tests = sum(adjusted_interaction_p_values < 0.05, na.rm = TRUE),",
      "  fdr_controlled = all(adjusted_interaction_p_values >= 0.05 | is.na(adjusted_interaction_p_values)),",
      "  hochberg_applied = TRUE",
      ")",
      "",
      "# Print validation results",
      "cat('Data Validation:\\n')",
      "print(data_validation)",
      "cat('\\nSubgroup Sample Size Validation:\\n')",
      "print(subgroup_sample_sizes)",
      "cat('\\nStatistical Validation:\\n')",
      "print(statistical_validation)",
      "cat('\\nClinical Validation:\\n')",
      "print(clinical_validation)",
      "cat('\\nMultiplicity Validation:\\n')",
      "print(multiplicity_validation)"
    ],
    "export_functions": [
      "# Export subgroup analysis results",
      "export_subgroup_results <- function(table_data, results, interaction_results, adjusted_p_values, param_info, output_dir = 'output') {",
      "  # Create output directory",
      "  if (!dir.exists(output_dir)) {",
      "    dir.create(output_dir, recursive = TRUE)",
      "  }",
      "  ",
      "  # Export HTML table",
      "  html_file <- file.path(output_dir, 'subgroup_analysis_table.html')",
      "  subgroup_analysis_table %>%",
      "    gtsave(html_file)",
      "  ",
      "  # Export RTF table",
      "  rtf_file <- file.path(output_dir, 'subgroup_analysis_table.rtf')",
      "  subgroup_table_data %>%",
      "    flextable() %>%",
      "    set_header_labels(",
      "      Subgroup = 'Subgroup',",
      "      Category = 'Category',",
      "      Treatment_A = 'Treatment A\\nMean (SD)',",
      "      Treatment_B = 'Treatment B\\nMean (SD)',",
      "      Placebo = 'Placebo\\nMean (SD)',",
      "      Treatment_A_vs_Placebo = 'Treatment A vs Placebo\\nDifference (95% CI)',",
      "      Treatment_B_vs_Placebo = 'Treatment B vs Placebo\\nDifference (95% CI)',",
      "      Interaction_p_value = 'Interaction p-value',",
      "      Clinical_Relevance = 'Clinical Relevance'",
      "    ) %>%",
      "    autofit() %>%",
      "    save_as_rtf(rtf_file)",
      "  ",
      "  # Export results summary",
      "  summary_file <- file.path(output_dir, 'subgroup_analysis_summary.txt')",
      "  sink(summary_file)",
      "  cat('Subgroup Analysis Summary\\n')",
      "  cat('========================\\n\\n')",
      "  ",
      "  for (param in names(results)) {",
      "    result <- results[[param]]",
      "    info <- param_info[[param]]",
      "    interaction_p <- adjusted_p_values[param]",
      "    ",
      "    cat(sprintf('Subgroup: %s\\n', info$label))",
      "    cat(sprintf('Category: %s\\n', info$category))",
      "    ",
      "    # Print summary statistics",
      "    cat('Summary Statistics:\\n')",
      "    print(result$summary)",
      "    ",
      "    # Print treatment differences",
      "    cat('Treatment Differences:\\n')",
      "    print(result$differences)",
      "    ",
      "    # Print interaction results",
      "    cat(sprintf('Interaction p-value: %.4f\\n', interaction_p))",
      "    cat('\\n')",
      "  }",
      "  ",
      "  cat('Multiplicity Control: Hochberg procedure applied\\n')",
      "  cat('Statistical Method: Interaction Testing\\n')",
      "  cat('Population: Intent-to-Treat\\n')",
      "  cat('Significance Level: 0.05\\n')",
      "  sink()",
      "  ",
      "  cat('Exported files to:', output_dir, '\\n')",
      "}",
      "",
      "# Export results",
      "export_subgroup_results(subgroup_table_data, subgroup_results, interaction_results, adjusted_interaction_p_values, subgroup_parameters)"
    ]
  },
  "keywords": [
    "subgroup analysis",
    "interaction testing",
    "multiplicity control",
    "hochberg procedure",
    "pre-specified subgroups",
    "treatment-by-subgroup interaction",
    "ITT population",
    "FDA compliance",
    "ICH E3",
    "clinical trial",
    "statistical analysis"
  ],
  "metadata": {
    "created_date": "2024-08-06",
    "version": "1.0",
    "author": "Jaime Yan",
    "description": "FDA-compliant subgroup analysis template with detailed structure and complete R code",
    "references": [
      "ICH E3 Guidelines Section 14.3.1",
      "FDA Guidance for Industry: E9 Statistical Principles for Clinical Trials",
      "CDISC ADaM Implementation Guide",
      "Subgroup Analysis Guidelines",
      "Statistical Analysis Plan Template"
    ],
    "data_requirements": [
      "ADSL dataset with ITTFL flag",
      "ADQS dataset with efficacy endpoints",
      "Subgroup variables: AGE_GROUP, SEX, RACE, DISEASE_SEVERITY, APOE4_STATUS, CONCOMITANT_MED, REGION",
      "Baseline variables: AGE, SEX, RACE, BASE_MMSE, BASE_APOE4, BASE_CHOLINESTERASE, BASE_MEMANTINE, BASE_AD_MED, COUNTRY",
      "Efficacy endpoint: CHG (change from baseline)",
      "Treatment assignment: TRT01P",
      "Visit information: AVISIT (Week 26)"
    ],
    "statistical_methods": [
      "Interaction testing for treatment-by-subgroup effects",
      "Multiplicity control using Hochberg procedure",
      "Linear models with interaction terms",
      "Treatment group comparisons within subgroups",
      "Clinical significance assessment using pre-specified thresholds"
    ]
  }
} 